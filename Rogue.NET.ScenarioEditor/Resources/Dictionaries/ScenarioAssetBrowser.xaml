<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Core;component/Resource/Converter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Rogue.NET.ScenarioEditor;component/Resources/Dictionaries/Converter.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="AssetBrowserStyle" TargetType="TreeView">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="18" />        
    </Style>
    <Style x:Key="AssetBrowserItemContainerStyle" TargetType="TreeViewItem">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="18" />
    </Style>

    <!-- Control template style example copied from msft: http://msdn.microsoft.com/en-us/library/vstudio/ms788727(v=vs.90).aspx -->
    <SolidColorBrush x:Key="GlyphBrush" Color="#888" />
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="15" Height="13" Background="Transparent">
                        <Path x:Name="ExpandPath" 
                              HorizontalAlignment="Left" 
                              VerticalAlignment="Center"  
                              Margin="1,1,1,1" Fill="{StaticResource GlyphBrush}" Data="M 4 0 L 8 4 L 4 8 Z">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                    <TranslateTransform X="-1" Y="-1" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0"
                                     StrokeThickness="5"
                                     Stroke="Black"
                                     StrokeDashArray="1 2"
                                     Opacity="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AssetBrowserAddButtonStyle" TargetType="TreeViewItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="20" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Rectangle Grid.ColumnSpan="4" Fill="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

                        <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" 
                                      IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                      ClickMode="Press"/>
                        
                        <TextBlock Cursor="Hand" 
                                   FontFamily="{StaticResource FontAwesome}" 
                                   Background="Transparent" 
                                   Foreground="White" 
                                   FontSize="{TemplateBinding FontSize}" 
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   ToolTip="Add Asset"
                                   Padding="{TemplateBinding Padding}"
                                   Text="&#xf067;" 
                                   Grid.Column="3">
                            <TextBlock.InputBindings>
                                <MouseBinding Command="{Binding AddAssetCommand}" MouseAction="LeftClick" />
                            </TextBlock.InputBindings>
                        </TextBlock>
                        
                        <Border Name="Bd"
                                  Grid.Column="1"                                  
                                  Background="Transparent"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Header" 
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        
                        <ItemsPresenter x:Name="ItemsHost"
                                          Grid.Row="1"
                                          Grid.Column="1"
                                          Grid.ColumnSpan="3"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="DarkBlue" Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="DarkBlue" Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <DataTrigger Binding="{Binding HasObjectiveAssets}" Value="True">
                            <Setter Property="Foreground" Value="Cyan" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AssetBrowserRemoveButtonStyle" TargetType="TreeViewItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid Margin="-20,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Grid.InputBindings>
                            <MouseBinding Command="{Binding LoadAssetCommand}" MouseAction="LeftClick" />
                        </Grid.InputBindings>

                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding CopyAssetCommand}">
                                    <MenuItem.Icon>
                                        <TextBlock Text="&#xf0c5;" FontFamily="{StaticResource FontAwesome}" />
                                    </MenuItem.Icon>
                                    <MenuItem.Header>
                                        <TextBlock>
                                            <Run Text="Copy" />
                                        </TextBlock>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Command="{Binding RemoveAssetCommand}">
                                    <MenuItem.Icon>
                                        <TextBlock Text="&#xf068;" FontFamily="{StaticResource FontAwesome}" />
                                    </MenuItem.Icon>
                                    <MenuItem.Header>
                                        <TextBlock>
                                            <Run Text="Delete" />
                                        </TextBlock>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Command="{Binding RenameAssetCommand}">
                                    <MenuItem.Icon>
                                        <TextBlock Text="&#xf044;" FontFamily="{StaticResource FontAwesome}" />
                                    </MenuItem.Icon>
                                    <MenuItem.Header>
                                        <TextBlock>
                                            <Run Text="Rename" />
                                        </TextBlock>
                                    </MenuItem.Header>
                                </MenuItem>                                
                            </ContextMenu>
                        </Grid.ContextMenu>

                        <Rectangle Grid.ColumnSpan="4" 
                                   Fill="{TemplateBinding Background}" 
                                   HorizontalAlignment="Stretch" 
                                   VerticalAlignment="Stretch" />

                        <Image Grid.Column="1"
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Center" 
                               Stretch="None">
                            <Image.Source>
                                <MultiBinding Converter="{StaticResource SymbolImageSourceConverter}">
                                    <MultiBinding.ConverterParameter>
                                        <system:Double>1.35</system:Double>
                                    </MultiBinding.ConverterParameter>
                                    <Binding Path="SymbolDetails.CharacterColor" />
                                    <Binding Path="SymbolDetails.CharacterSymbol" />
                                    <Binding Path="SymbolDetails.CharacterSymbolCategory" />
                                    <Binding Path="SymbolDetails.CharacterScale" />
                                    <Binding Path="SymbolDetails.Symbol" />
                                    <Binding Path="SymbolDetails.SymbolHue" />
                                    <Binding Path="SymbolDetails.SymbolSaturation" />
                                    <Binding Path="SymbolDetails.SymbolLightness" />
                                    <Binding Path="SymbolDetails.SymbolScale" />
                                    <Binding Path="SymbolDetails.SymbolUseColorMask" />
                                    <Binding Path="SymbolDetails.SmileyExpression" />
                                    <Binding Path="SymbolDetails.SmileyAuraColor" />
                                    <Binding Path="SymbolDetails.SmileyBodyColor" />
                                    <Binding Path="SymbolDetails.SmileyLineColor" />
                                    <Binding Path="SymbolDetails.GameSymbol" />
                                    <Binding Path="SymbolDetails.SymbolType" />
                                </MultiBinding>
                            </Image.Source>
                        </Image>

                        <Border Name="Bd"
                                  Grid.Column="2" Margin="4,0,0,0"           
                                  Background="Transparent"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}">

                            <TextBlock x:Name="PART_Header" 
                                       Text="{Binding Name}"
                                       FontSize="18"
                                       Foreground="{TemplateBinding Foreground}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            </TextBlock>
                        </Border>

                        <ItemsPresenter x:Name="ItemsHost"
                                          Grid.Row="1"
                                          Grid.Column="2"
                                          Grid.ColumnSpan="2"/>
                    
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="DarkBlue" Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="DarkBlue" Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsObjective}" Value="True" />
                                <Condition Binding="{Binding IsUnique}" Value="False" />
                                <Condition Binding="{Binding IsCursed}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground" Value="Cyan" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsObjective}" Value="False" />
                                <Condition Binding="{Binding IsUnique}" Value="True" />
                                <Condition Binding="{Binding IsCursed}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground" Value="Goldenrod" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsObjective}" Value="False" />
                                <Condition Binding="{Binding IsUnique}" Value="False" />
                                <Condition Binding="{Binding IsCursed}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground" Value="Red" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsObjective}" Value="True" />
                                <Condition Binding="{Binding IsUnique}" Value="True" />
                                <Condition Binding="{Binding IsCursed}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground" Value="Cyan" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsObjective}" Value="True" />
                                <Condition Binding="{Binding IsUnique}" Value="False" />
                                <Condition Binding="{Binding IsCursed}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground" Value="Cyan" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsObjective}" Value="False" />
                                <Condition Binding="{Binding IsUnique}" Value="True" />
                                <Condition Binding="{Binding IsCursed}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground" Value="Purple" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsObjective}" Value="True" />
                                <Condition Binding="{Binding IsUnique}" Value="True" />
                                <Condition Binding="{Binding IsCursed}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground" Value="Cyan" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>