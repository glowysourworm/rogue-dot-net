<UserControl x:Class="Rogue.NET.ScenarioEditor.Views.Controls.Symbol.SymbolEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:views="clr-namespace:Rogue.NET.Common.View;assembly=Rogue.NET.Common"
             xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:coreModelEnums="clr-namespace:Rogue.NET.Core.Model.Enums;assembly=Rogue.NET.Core"
             xmlns:extension="clr-namespace:Rogue.NET.Common.Extension;assembly=Rogue.NET.Common"
             xmlns:symbol="clr-namespace:Rogue.NET.ScenarioEditor.Views.Controls.Symbol"
             xmlns:region="clr-namespace:Rogue.NET.Common.Extension.Prism.RegionManager;assembly=Rogue.NET.Common"
             Background="Black">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Core;component/Resource/Converter.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.ScenarioEditor;component/Resources/Dictionaries/Converter.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <StackPanel>
            
            <!-- Symbol Preview -->
            <Grid Margin="10">
                <TextBlock Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Text="Symbol Preview" />
                <symbol:SymbolPreviewControl HorizontalAlignment="Right" Height="60" Width="60" Border="White" />
            </Grid>      
            
            <!-- Symbol Type -->
            <Grid Margin="10">
                <TextBlock Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Text="Symbol Type" />
                <views:EnumComboBox IsEnabled="{Binding IsOrientedSymbol, Converter={StaticResource BoolInverseConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                    EnumValue="{Binding SymbolType, Mode=TwoWay}"  
                                    EnumType="{x:Type coreModelEnums:SymbolType}" 
                                    Width="200" HorizontalAlignment="Right" Height="24" />
            </Grid>

            <!-- Symbol Pool Randomize Flag -->
            <Grid Margin="10"
                  Visibility="{Binding AllowSymbolRandomization, Converter={StaticResource BoolVisibilityCollapseConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}">
                <TextBlock Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Text="Randomize Symbol" />
                <CheckBox IsChecked="{Binding Randomize}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0" />
            </Grid>            
            
            <!-- Symbol Pool Category -->
            <Grid Margin="10"
                  Visibility="{Binding Randomize, Converter={StaticResource BoolVisibilityCollapseConverter}}">
                <TextBlock Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Text="Symbol Category (to select symbol pool)" />
                <ComboBox x:Name="SymbolPoolCategoryCB"
                          SelectedValue="{Binding SymbolPoolCategory}"
                          SelectedValuePath="SymbolPoolCategory"
                          DisplayMemberPath="SymbolPoolCategory"
                          Width="200" HorizontalAlignment="Right" Height="24" />
            </Grid>

            <!-- Smiley Editor -->
            <GroupBox Visibility="{Binding SymbolType, Converter={StaticResource SymbolEditorVisibilityConverter}, ConverterParameter={x:Static coreModelEnums:SymbolType.Smiley}}"  Margin="10" Header="Smiley Parameters">
                <StackPanel>
                    <Grid Margin="10">
                        <TextBlock Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Text="Body Color" />
                        <toolkit:ColorPicker Width="200" 
                                             HorizontalAlignment="Right" 
                                             SelectedColor="{Binding SmileyBodyColor, Delay=300, Converter={StaticResource StringColorConverter}, Mode=TwoWay}" />
                    </Grid>
                    <Grid Margin="10">
                        <TextBlock Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Text="Line Color" />
                        <toolkit:ColorPicker Width="200" 
                                             HorizontalAlignment="Right" 
                                             SelectedColor="{Binding SmileyLineColor, Delay=300, Converter={StaticResource StringColorConverter}, Mode=TwoWay}" />
                    </Grid>
                    <Grid Margin="10">
                        <TextBlock Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Text="Expression" />
                        <views:EnumComboBox EnumType="{x:Type coreModelEnums:SmileyExpression}"  EnumValue="{Binding SmileyExpression, Mode=TwoWay}" Width="200" HorizontalAlignment="Right" />
                    </Grid>                    
                </StackPanel>
            </GroupBox>
            
            <!-- Character Editor -->
            <GroupBox Visibility="{Binding SymbolType, Converter={StaticResource SymbolEditorVisibilityConverter}, ConverterParameter={x:Static coreModelEnums:SymbolType.Character}}" Margin="10" Header="Unicode Character Parameters">
                <StackPanel>
                    <Grid Margin="10">
                        <Button x:Name="CharacterSymbolButton" Click="CharacterSymbolButton_Click" Content="View Symbol Map" HorizontalAlignment="Right" Padding="10,2,10,2" />
                    </Grid>
                    <Grid Margin="10">
                        <TextBlock Text="Scale" HorizontalAlignment="Left" FontSize="16" Foreground="White" />
                        <Slider x:Name="SaturationSlider" Value="{Binding CharacterScale, Delay=500, Mode=TwoWay}" Minimum="0" Maximum="1" Width="200" HorizontalAlignment="Right" />
                    </Grid>                    
                    <Grid Margin="10">
                        <TextBlock Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" FontSize="16" Text="Symbol Color" />
                        <toolkit:ColorPicker Width="200" 
                                             HorizontalAlignment="Right" 
                                             SelectedColor="{Binding CharacterColor, Delay=300, Converter={StaticResource StringColorConverter}, Mode=TwoWay}" />
                    </Grid>
                </StackPanel>
            </GroupBox>

            <!-- Symbol Editor -->
            <GroupBox  Margin="10" Header="Symbol Parameters">
                <GroupBox.Visibility>
                    <MultiBinding Converter="{StaticResource BoolORVisibilityMultiConverter}">
                        <Binding Path="SymbolType" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:SymbolType.Symbol}" />
                        <Binding Path="SymbolType" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:SymbolType.OrientedSymbol}" />
                        <Binding Path="SymbolType" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:SymbolType.Terrain}" />
                    </MultiBinding>
                </GroupBox.Visibility>
                <Grid Margin="10">
                    <region:RogueRegion region:RogueRegionManager.DefaultViewType="{x:Type symbol:SymbolChooser}" />
                </Grid>
            </GroupBox>

            <!-- Game Symbol Editor -->
            <GroupBox Visibility="{Binding SymbolType, Converter={StaticResource SymbolEditorVisibilityConverter}, ConverterParameter={x:Static coreModelEnums:SymbolType.Game}}" Margin="10" Header="Game Symbol Parameters">
                <Grid Margin="10">
                    <TextBlock Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Text="Game Symbol" />
                    <symbol:SymbolComboBox Width="300" Value="{Binding GameSymbol, Mode=TwoWay}" HorizontalAlignment="Right" />
                </Grid>
            </GroupBox>

            <!-- Dialog Result Button -->
            <Grid x:Name="ButtonGrid" Visibility="Collapsed">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Margin="10" Padding="5" Width="80" Content="OK" extension:ButtonExtension.DialogResult="True" />
                </StackPanel>
            </Grid>
            
        </StackPanel>
    </Grid>
</UserControl>
