<UserControl x:Class="Rogue.NET.ScenarioEditor.Views.Controls.Symbol.SymbolEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:views="clr-namespace:Rogue.NET.Common.View;assembly=Rogue.NET.Common"
             xmlns:coreModelEnums="clr-namespace:Rogue.NET.Core.Model.Enums;assembly=Rogue.NET.Core"
             xmlns:controls="clr-namespace:Rogue.NET.ScenarioEditor.Views.Controls"  
             xmlns:extension="clr-namespace:Rogue.NET.Common.Extension;assembly=Rogue.NET.Common"
             xmlns:symbol="clr-namespace:Rogue.NET.ScenarioEditor.Views.Controls.Symbol"
             xmlns:region="clr-namespace:Rogue.NET.Common.Extension.Prism.RegionManager;assembly=Rogue.NET.Common"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             Background="Black">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Core;component/Resource/Converter.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.ScenarioEditor;component/Resources/Dictionaries/Converter.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <StackPanel>
            
            <!-- Symbol Preview -->
            <Grid Margin="10">
                <TextBlock Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Text="Symbol Preview" />
                <Border HorizontalAlignment="Right" Height="60" Width="60" BorderBrush="White" BorderThickness="1" CornerRadius="3">
                    <Border.Background>
                        <RadialGradientBrush>
                            <GradientStop Offset="0">
                                <GradientStop.Color>
                                    <MultiBinding Converter="{StaticResource SymbolDetailsTemplateAuraToColorConverter}">
                                        <Binding Path="SmileyAuraColor" />
                                        <Binding Path="Type" />
                                    </MultiBinding>
                                </GradientStop.Color>
                            </GradientStop>
                            <GradientStop Color="Transparent" Offset="1" />
                        </RadialGradientBrush>
                    </Border.Background>
                    <Image  VerticalAlignment="Stretch" 
                            HorizontalAlignment="Stretch"
                            Height="30"
                            Width="20"
                            Stretch="None">
                        <Image.Source>
                            <MultiBinding Converter="{StaticResource SymbolImageSourceConverter}">
                                <MultiBinding.ConverterParameter>
                                    <system:Double>2.0</system:Double>
                                </MultiBinding.ConverterParameter>
                                <Binding Path="CharacterColor" />
                                <Binding Path="CharacterSymbol" />
                                <Binding Path="CharacterSymbolCategory" />
                                <Binding Path="CharacterScale" />
                                <Binding Path="Symbol" />
                                <Binding Path="SymbolHue" />
                                <Binding Path="SymbolSaturation" />
                                <Binding Path="SymbolLightness" />
                                <Binding Path="SymbolScale" />
                                <Binding Path="SymbolColorMapFrom" />
                                <Binding Path="SymbolColorMapTo" />
                                <Binding Path="SmileyExpression" />
                                <Binding Path="SmileyAuraColor" />
                                <Binding Path="SmileyBodyColor" />
                                <Binding Path="SmileyLineColor" />
                                <Binding Path="GameSymbol" />
                                <Binding Path="SymbolType" />
                            </MultiBinding>
                        </Image.Source>
                    </Image>
                </Border>
            </Grid>      
            
            <!-- Symbol Type -->
            <Grid Margin="10">
                <TextBlock Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Text="Symbol Type" />
                <views:EnumComboBox EnumValue="{Binding SymbolType, Mode=TwoWay}"  EnumType="{x:Type coreModelEnums:SymbolType}" Width="200" HorizontalAlignment="Right" Height="24" />
            </Grid>
            
            <!-- Smiley Editor -->
            <GroupBox Visibility="{Binding SymbolType, Converter={StaticResource SymbolEditorVisibilityConverter}, ConverterParameter={x:Static coreModelEnums:SymbolType.Smiley}}"  Margin="10" Header="Smiley Parameters">
                <StackPanel>
                    <Grid Margin="10">
                        <TextBlock Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Text="Body Color" />
                        <controls:ColorComboBox SelectedValue="{Binding SmileyBodyColor, Mode=TwoWay}"  Width="200" HorizontalAlignment="Right" />
                    </Grid>
                    <Grid Margin="10">
                        <TextBlock Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Text="Line Color" />
                        <controls:ColorComboBox SelectedValue="{Binding SmileyLineColor, Mode=TwoWay}" Width="200" HorizontalAlignment="Right" />
                    </Grid>
                    <Grid Margin="10">
                        <TextBlock Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Text="Light Radius Color" />
                        <controls:ColorComboBox SelectedValue="{Binding SmileyAuraColor, Mode=TwoWay}" Width="200" HorizontalAlignment="Right" />
                    </Grid>
                    <Grid Margin="10">
                        <TextBlock Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Text="Expression" />
                        <views:EnumComboBox EnumType="{x:Type coreModelEnums:SmileyExpression}"  EnumValue="{Binding SmileyExpression, Mode=TwoWay}" Width="200" HorizontalAlignment="Right" />
                    </Grid>                    
                </StackPanel>
            </GroupBox>
            
            <!-- Character Editor -->
            <GroupBox Visibility="{Binding SymbolType, Converter={StaticResource SymbolEditorVisibilityConverter}, ConverterParameter={x:Static coreModelEnums:SymbolType.Character}}" Margin="10" Header="Unicode Character Parameters">
                <StackPanel>
                    <Grid Margin="10">
                        <Button x:Name="CharacterSymbolButton" Click="CharacterSymbolButton_Click" Content="View Symbol Map" HorizontalAlignment="Right" Padding="10,2,10,2" />
                    </Grid>
                    <Grid Margin="10">
                        <TextBlock Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Text="Symbol Color" />
                        <controls:ColorComboBox SelectedValue="{Binding CharacterColor, Mode=TwoWay}" Width="200" HorizontalAlignment="Right" />
                    </Grid>
                </StackPanel>
            </GroupBox>

            <!-- Symbol Editor -->
            <GroupBox Visibility="{Binding SymbolType, Converter={StaticResource SymbolEditorVisibilityConverter}, ConverterParameter={x:Static coreModelEnums:SymbolType.Symbol}}" Margin="10" Header="Symbol Parameters">
                <Grid Margin="10">
                    <region:RogueRegion region:RogueRegionManager.DefaultViewType="{x:Type symbol:SymbolChooser}" />
                </Grid>
            </GroupBox>

            <!-- Game Symbol Editor -->
            <GroupBox Visibility="{Binding SymbolType, Converter={StaticResource SymbolEditorVisibilityConverter}, ConverterParameter={x:Static coreModelEnums:SymbolType.Game}}" Margin="10" Header="Game Symbol Parameters">
                <Grid Margin="10">
                    <symbol:SymbolComboBox Width="300" Value="{Binding GameSymbol, Mode=TwoWay}" SymbolType="Game" />
                </Grid>
            </GroupBox>

            <!-- Dialog Result Button -->
            <Grid x:Name="ButtonGrid" Visibility="Collapsed">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Margin="10" Padding="5" Width="80" Content="OK" extension:ButtonExtension.DialogResult="True" />
                </StackPanel>
            </Grid>
            
        </StackPanel>
    </Grid>
</UserControl>
