<UserControl x:Class="Rogue.NET.ScenarioEditor.Views.Assets.SpellControl.SpellParameters"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:views="clr-namespace:Rogue.NET.Common.View;assembly=Rogue.NET.Common"
             xmlns:extension="clr-namespace:Rogue.NET.Common.Extension;assembly=Rogue.NET.Common"
             xmlns:coreModelEnums="clr-namespace:Rogue.NET.Core.Model.Enums;assembly=Rogue.NET.Core"
             xmlns:toolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
             xmlns:controls="clr-namespace:Rogue.NET.ScenarioEditor.Views.Controls"
             Background="Black">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Common;component/Resource/Dictionaries/ButtonSpinner.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Core;component/Resource/Converter.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <StackPanel>
        <Grid Margin="10">
            <TextBlock Text="Display Name" Foreground="White" />
            <extension:UpdatingTextBox Width="150" Text="{Binding DisplayName, Mode=TwoWay}" HorizontalAlignment="Right" />
        </Grid>
        <Grid Margin="10">
            <Grid.Visibility>
                <MultiBinding Converter="{StaticResource BoolORVisibilityMultiConverter}">
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.PassiveSource}" />
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.PassiveAura}" />
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporarySource}" />
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporaryTarget}" />
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporaryAllTargets}" />
                    <Binding Path="AttackAttributeType" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationAttackAttributeType.Passive}" />
                    <Binding Path="AttackAttributeType" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationAttackAttributeType.TemporaryFriendlySource}" />
                    <Binding Path="AttackAttributeType" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationAttackAttributeType.TemporaryFriendlyTarget}" />
                    <Binding Path="AttackAttributeType" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationAttackAttributeType.TemporaryMalignSource}" />
                    <Binding Path="AttackAttributeType" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationAttackAttributeType.TemporaryMalignTarget}" />
                </MultiBinding>
            </Grid.Visibility>
            <TextBlock Text="Stackable" Foreground="White" />
            <CheckBox IsChecked="{Binding Stackable, Mode=TwoWay}" HorizontalAlignment="Right" />
        </Grid>
        <Grid Margin="10">
            <Grid.Visibility>
                <MultiBinding Converter="{StaticResource BoolORVisibilityMultiConverter}">
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.PassiveSource}" />
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.PassiveAura}" />
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporarySource}" />
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporaryTarget}" />
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporaryAllTargets}" />
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.PermanentSource}" />
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.PermanentTarget}" />
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.PermanentAllTargets}" />
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.Remedy}" />
                </MultiBinding>
            </Grid.Visibility>
            <TextBlock Foreground="White" Text="Is Effect Symbol Alteration" HorizontalAlignment="Left" />
            <CheckBox IsChecked="{Binding Effect.IsSymbolAlteration, Mode=TwoWay}" HorizontalAlignment="Right" />
        </Grid>
        <Grid Margin="10" Visibility="{Binding Path=Type, Converter={StaticResource ParameterVisibilityCollapsedConverter}, ConverterParameter={x:Static coreModelEnums:AlterationType.PassiveAura}}">
            <TextBlock Foreground="White" Text="Is Aura Effect Symbol Alteration" HorizontalAlignment="Left" />
            <CheckBox IsChecked="{Binding AuraEffect.IsSymbolAlteration, Mode=TwoWay}" HorizontalAlignment="Right" />
        </Grid>        
        <Grid Margin="10">
            <Grid.Visibility>
                <MultiBinding Converter="{StaticResource BoolORVisibilityMultiConverter}">
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporarySource}" />
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporaryTarget}" />
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporaryAllTargets}" />
                    <Binding Path="AttackAttributeType" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationAttackAttributeType.TemporaryFriendlySource}" />
                    <Binding Path="AttackAttributeType" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationAttackAttributeType.TemporaryFriendlyTarget}" />
                    <Binding Path="AttackAttributeType" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationAttackAttributeType.TemporaryMalignSource}" />
                    <Binding Path="AttackAttributeType" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationAttackAttributeType.TemporaryMalignTarget}" />
                </MultiBinding>                
            </Grid.Visibility>
            <TextBlock Foreground="White" Text="Event Time" />
            <controls:Range DataContext="{Binding Effect.EventTime}" />
        </Grid>        
        <Grid Margin="10">
            <Grid.Visibility>
                <MultiBinding Converter="{StaticResource BoolANDVisibilityMultiConverter}">
                    <Binding Path="Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.OtherMagicEffect}" />
                    <Binding Path="OtherEffectType" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationMagicEffectType.CreateMonster}" />
                </MultiBinding>
            </Grid.Visibility>
            <TextBlock Text="Create Monster Enemy" Foreground="White" />
            <ComboBox x:Name="CreateMonsterCB" 
                                  SelectedItem="{Binding CreateMonsterEnemy, Mode=TwoWay}" 
                                  SelectedValue="{Binding CreateMonsterEnemy.Name}"
                                  DisplayMemberPath="Name"
                                  SelectedValuePath="Name"
                                  Width="150" HorizontalAlignment="Right"/>
        </Grid>
        <Grid Margin="10" 
              Visibility="{Binding Path=Type, Converter={StaticResource ParameterVisibilityCollapsedConverter}, ConverterParameter={x:Static coreModelEnums:AlterationType.Remedy}}">
            <TextBlock Foreground="White" Text="Remedied Effect" />
            <ComboBox x:Name="RemediedSpellCB" 
                        SelectedValue="{Binding Effect.RemediedSpellName}"
                        SelectedValuePath="Name"                          
                        DisplayMemberPath="Name" HorizontalAlignment="Right" Height="24"  Width="400"  />
        </Grid>        
        <Grid Margin="10"
              Visibility="{Binding Path=Type, Converter={StaticResource ParameterVisibilityCollapsedConverter}, ConverterParameter={x:Static coreModelEnums:AlterationType.PassiveAura}}">
            <TextBlock Text="Effect Range" Foreground="White" />
            <toolkit:DoubleUpDown Value="{Binding EffectRange, Mode=TwoWay}" Minimum="1" Maximum="20" Increment="1" AllowTextInput="True" AllowSpin="True" Width="150" HorizontalAlignment="Right" />
        </Grid>
        <Grid Margin="10">
            <GroupBox Header="Animation" FontSize="18">
                <StackPanel>
                    <TextBlock Text="These Animations will be played in the order they're shown here"
                               HorizontalAlignment="Left"
                               FontSize="16"
                               Margin="8"
                               Foreground="White"/>
                    <controls:ListBuilder x:Name="AnimationsLB" DestinationItemsSource="{Binding Animations}" Margin="8" Height="200" />
                </StackPanel>
            </GroupBox>
        </Grid>
    </StackPanel>
</UserControl>