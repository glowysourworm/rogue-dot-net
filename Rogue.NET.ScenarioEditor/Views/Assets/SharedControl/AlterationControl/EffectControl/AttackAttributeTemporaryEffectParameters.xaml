<UserControl x:Class="Rogue.NET.ScenarioEditor.Views.Assets.SharedControl.AlterationControl.EffectControl.AttackAttributeTemporaryEffectParameters"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:symbol="clr-namespace:Rogue.NET.ScenarioEditor.Views.Controls.Symbol"
             xmlns:controls="clr-namespace:Rogue.NET.ScenarioEditor.Views.Controls"
             xmlns:coreModelEnums="clr-namespace:Rogue.NET.Core.Model.Enums;assembly=Rogue.NET.Core"             
             xmlns:markupExtension="clr-namespace:Rogue.NET.ScenarioEditor.Views.MarkupExtension"
             xmlns:region="clr-namespace:Rogue.NET.Common.Extension.Prism.RegionManager;assembly=Rogue.NET.Common">
    <UserControl.Resources>
        <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Core;component/Resource/Converter.xaml" />
    </UserControl.Resources>
    <TabControl TabStripPlacement="Left" Background="Black">
        <TabItem Header="General">
            <StackPanel>
                
                <!-- Event Time -->
                <Grid Margin="10">
                    <TextBlock Text="Event Time" Foreground="White" />
                    <controls:Range DataContext="{Binding EventTime}" LowLimit="5" HighLimit="2000" Increment="1" StringFormat="N0" Width="300" HorizontalAlignment="Right" />
                </Grid>

                <!-- Is Stackable -->
                <Grid Margin="10">
                    <TextBlock Text="Is Stackable (Can apply several times)" Foreground="White" />
                    <CheckBox IsChecked="{Binding IsStackable, Mode=TwoWay}" HorizontalAlignment="Right" />
                </Grid>

                <!-- Has Altered State -->
                <Grid Margin="10">
                    <TextBlock Text="Has Altered State" Foreground="White" />
                    <CheckBox IsChecked="{Binding HasAlteredState, Mode=TwoWay}" HorizontalAlignment="Right" />
                </Grid>                
                
                <!-- Altered State -->
                <Grid Margin="10"
                      Visibility="{Binding HasAlteredState, Converter={StaticResource BoolVisibilityCollapseConverter}}">
                    <TextBlock Text="Altered Character State" Foreground="White" />
                    <ComboBox x:Name="AlteredStateCB" 
                              SelectedItem="{Binding AlteredState}"
                              SelectedValue="{Binding AlteredState.Name}"
                              SelectedValuePath="Name"
                              DisplayMemberPath="Name" 
                              HorizontalAlignment="Right" Height="24"  Width="250" />
                </Grid>

            </StackPanel>
        </TabItem>
        <TabItem Header="Type">
            <controls:RadioButtonEnumControl EnumType="{x:Type coreModelEnums:AlterationAttackAttributeCombatType}"
                                             EnumValue="{Binding CombatType, Mode=TwoWay}" />
        </TabItem>
        <TabItem Header="Symbol Change">
            <symbol:SymbolEffectEditor DataContext="{Binding SymbolAlteration}" />
        </TabItem>
        <TabItem Header="Attack Attributes">
            <region:RogueRegion DataContext="{Binding AttackAttributes}">
                <region:RogueRegionManager.DefaultView>
                    <markupExtension:AttackAttributeListControlConstructor AttackAttributeCountLimit="1"
                                                                               ShowAttack="True"
                                                                               ShowResistance="True"
                                                                               ShowWeakness="True"
                                                                               ShowImmune="True" />
                </region:RogueRegionManager.DefaultView>
            </region:RogueRegion>
        </TabItem>
    </TabControl>             
</UserControl>
