<UserControl x:Class="Rogue.NET.ScenarioEditor.Views.Assets.Doodad"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:Rogue.NET.ScenarioEditor.Views.Controls"
             xmlns:sharedControl="clr-namespace:Rogue.NET.ScenarioEditor.Views.Assets.SharedControl"
             xmlns:region="clr-namespace:Rogue.NET.Common.Extension.Prism.RegionManager;assembly=Rogue.NET.Common"
             xmlns:doodad="clr-namespace:Rogue.NET.ScenarioEditor.Views.Assets.DoodadControl"
             FontSize="14"
             Background="Black">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Core;component/Resource/Converter.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.ScenarioEditor;component/Resources/Dictionaries/Converter.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Common;component/Resource/Dictionaries/ButtonSpinner.xaml" />
                <ResourceDictionary>
                    <Style TargetType="TextBox">
                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
                        <Setter Property="Background" Value="{DynamicResource LightBrush}"/>
                    </Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="White" />
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <TabControl TabStripPlacement="Left" Background="Black">
        <TabItem Header="Symbol" x:Name="DefaultTab">
            <controls:SymbolEditor DataContext="{Binding SymbolDetails}" />
        </TabItem>
        <TabItem Header="Rogue-Encyclopedia">
            <sharedControl:MetaDataControl HasCursedSetting="False" />
        </TabItem>
        <TabItem Header="Parameters">
            <StackPanel>
                <Grid Margin="10">
                    <CheckBox IsChecked="{Binding IsAutomatic}" HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <TextBlock Foreground="White" Text="Automatic (Triggers when stepped on)" HorizontalAlignment="Left" VerticalAlignment="Center" />
                </Grid>
                <Grid Margin="10">
                    <CheckBox IsChecked="{Binding IsInvoked}" HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <TextBlock Foreground="White" Text="Invoked (player must trigger manually)" HorizontalAlignment="Left" VerticalAlignment="Center" />
                </Grid>
                <Grid Margin="10">
                    <CheckBox IsChecked="{Binding IsVisible}" HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <TextBlock Foreground="White" Text="Visible (before being stepped on)" HorizontalAlignment="Left" VerticalAlignment="Center" />
                </Grid>
                <Grid Margin="10">
                    <CheckBox IsChecked="{Binding IsOneUse}" HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <TextBlock Foreground="White" Text="One Use (as opposed to unlimited uses)" HorizontalAlignment="Left" VerticalAlignment="Center" />
                </Grid>
                <Grid Margin="10">
                    <TextBlock Foreground="White" Text="Has Character Class Requirement" VerticalAlignment="Center" />
                    <CheckBox IsChecked="{Binding HasCharacterClassRequirement}" VerticalAlignment="Center" HorizontalAlignment="Right" />
                </Grid>
                <Grid Margin="10"
                      Visibility="{Binding HasCharacterClassRequirement, Converter={StaticResource BoolVisibilityCollapseConverter}}">
                    <TextBlock Foreground="White" Text="Character Class Requirement" VerticalAlignment="Top" HorizontalAlignment="Left" />
                    <ComboBox x:Name="CharacterClassCB" DisplayMemberPath="Name"
                                  SelectedItem="{Binding CharacterClass}"
                                  SelectedValue="{Binding CharacterClass.Name}"
                                  SelectedValuePath="Name"
                                  VerticalAlignment="Center" 
                                  Width="200"                              
                                  HorizontalAlignment="Right" />
                </Grid>
                <Grid Margin="10" Visibility="{Binding IsAutomatic, Converter={StaticResource BoolVisibilityCollapseConverter}}">
                    <ComboBox x:Name="AutomaticSpellCB" 
                      DisplayMemberPath="Name" 
                      SelectedItem="{Binding AutomaticMagicSpellTemplate, Mode=TwoWay}" 
                      SelectedValue="{Binding AutomaticMagicSpellTemplate.Name}"
                      SelectedValuePath="Name" Width="200" HorizontalAlignment="Right"/>
                    <TextBlock Grid.Row="4" Foreground="White" Text="Automatic Spell" HorizontalAlignment="Left" VerticalAlignment="Center" />
                </Grid>
                <Grid Margin="10" Visibility="{Binding IsInvoked, Converter={StaticResource BoolVisibilityCollapseConverter}}">
                    <ComboBox x:Name="InvokedSpellCB" 
                          DisplayMemberPath="Name" 
                          SelectedItem="{Binding InvokedMagicSpellTemplate, Mode=TwoWay}" 
                          SelectedValue="{Binding InvokedMagicSpellTemplate.Name}"
                          SelectedValuePath="Name" Width="200" HorizontalAlignment="Right"/>
                    <TextBlock Grid.Row="5" Foreground="White" Text="Manual (Invoked) Spell" HorizontalAlignment="Left" VerticalAlignment="Center" />
                </Grid>
            </StackPanel>
        </TabItem>
        <TabItem Header="Automatic Alteration">
            <region:RogueRegion region:RogueRegionManager.DefaultViewType="{x:Type doodad:DoodadAlterationControl}"
                                DataContext="{Binding AutomaticAlteration}">
            </region:RogueRegion>
        </TabItem>
        <TabItem Header="Invoked Alteration">
            <region:RogueRegion region:RogueRegionManager.DefaultViewType="{x:Type doodad:DoodadAlterationControl}"
                                DataContext="{Binding InvokedAlteration}">
            </region:RogueRegion>            
        </TabItem>
    </TabControl>
</UserControl>
