<UserControl x:Class="Rogue.NET.ScenarioEditor.Views.Assets.AnimationControl.AnimationBasicType"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:wpftoolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
             xmlns:coreModelEnums="clr-namespace:Rogue.NET.Core.Model.Enums;assembly=Rogue.NET.Core"
             Background="Black">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Core;component/Resource/Converter.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Common;component/Resource/Dictionaries/ButtonSpinner.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <StackPanel x:Name="RadioStack">
            <RadioButton x:Name="AuraRB" GroupName="MainGroup" Margin="10" Foreground="White" Background="Black">
                <RadioButton.Content>
                    <TextBlock  TextWrapping="Wrap"
                                Text="Aura:  This type of animation will create an ellipse around the character" />
                </RadioButton.Content>
            </RadioButton>
            <StackPanel x:Name="AuraRadioStack" 
                        Visibility="{Binding ElementName=AuraRB, Path=IsChecked, Converter={StaticResource BoolVisibilityCollapseConverter}}" Margin="20,0,0,0">
                <RadioButton IsChecked="{Binding Type, ConverterParameter={x:Static coreModelEnums:AnimationType.AuraSelf}, Converter={StaticResource RadioButtonEnumConverter}}" Margin="10" Foreground="White" Background="Black">
                    <RadioButton.Content>
                        <TextBlock  TextWrapping="Wrap"
                            Text="Aura Self: Focus is on invoker" />
                    </RadioButton.Content>
                </RadioButton>
                <RadioButton IsChecked="{Binding Type, ConverterParameter={x:Static coreModelEnums:AnimationType.AuraTarget}, Converter={StaticResource RadioButtonEnumConverter}}" Margin="10" Foreground="White" Background="Black">
                    <RadioButton.Content>
                        <TextBlock  TextWrapping="Wrap"
                            Text="Aura Target: Focus is on targeted character(s)" />
                    </RadioButton.Content>
                </RadioButton>
            </StackPanel>
            <RadioButton x:Name="BarrageRB" GroupName="MainGroup" Margin="10" Foreground="White" Background="Black">
                <RadioButton.Content>
                    <TextBlock  TextWrapping="Wrap"
                                Text="Barrage:  An army of ellipses zoom from random points around the character inward" />
                </RadioButton.Content>
            </RadioButton>
            <StackPanel x:Name="BarrageRadioStack"
                        Margin="20,0,0,0"
                        Visibility="{Binding ElementName=BarrageRB, Path=IsChecked, Converter={StaticResource BoolVisibilityCollapseConverter}}">
                <RadioButton IsChecked="{Binding Type, ConverterParameter={x:Static coreModelEnums:AnimationType.BarrageSelf}, Converter={StaticResource RadioButtonEnumConverter}}" Margin="10" Foreground="White" Background="Black">
                    <RadioButton.Content>
                        <TextBlock  TextWrapping="Wrap"
                                    Text="Barrage Self: Focus is on invoker" />
                    </RadioButton.Content>
                </RadioButton>
                <RadioButton IsChecked="{Binding Type, ConverterParameter={x:Static coreModelEnums:AnimationType.BarrageTarget}, Converter={StaticResource RadioButtonEnumConverter}}" Margin="10"  Foreground="White" Background="Black">
                    <RadioButton.Content>
                        <TextBlock  TextWrapping="Wrap"
                                    Text="Barrage Target: Focus is on the target(s)" />
                    </RadioButton.Content>
                </RadioButton>
            </StackPanel>
            <RadioButton GroupName="MainGroup" 
                         IsChecked="{Binding Type, ConverterParameter={x:Static coreModelEnums:AnimationType.ScreenBlink}, Converter={StaticResource RadioButtonEnumConverter}}" Margin="10"  Foreground="White" Background="Black">
                <RadioButton.Content>
                    <TextBlock  TextWrapping="Wrap"
                                Text="Blink:  Make the screen flash!" />
                </RadioButton.Content>
            </RadioButton>
            <RadioButton x:Name="BubblesRB" GroupName="MainGroup" Margin="10" Foreground="White" Background="Black">
                <RadioButton.Content>
                    <TextBlock  TextWrapping="Wrap"
                                Text="Bubbles: Create a swarm of ellipses around a character that roam around before fading away" />
                </RadioButton.Content>
            </RadioButton>
            <StackPanel x:Name="BubblesRadioStack" Visibility="{Binding ElementName=BubblesRB, Path=IsChecked, Converter={StaticResource BoolVisibilityCollapseConverter}}" Margin="20,0,0,0">
                <RadioButton IsChecked="{Binding Type, ConverterParameter={x:Static coreModelEnums:AnimationType.BubblesSelf}, Converter={StaticResource RadioButtonEnumConverter}}" Margin="10"  Foreground="White" Background="Black">
                    <RadioButton.Content>
                        <TextBlock  TextWrapping="Wrap"
                                    Text="Bubbles Self: Focus is on invoker" />
                    </RadioButton.Content>
                </RadioButton>
                <RadioButton IsChecked="{Binding Type, ConverterParameter={x:Static coreModelEnums:AnimationType.BubblesTarget}, Converter={StaticResource RadioButtonEnumConverter}}" Margin="10"  Foreground="White" Background="Black">
                    <RadioButton.Content>
                        <TextBlock  TextWrapping="Wrap"
                                    Text="Bubbles Target: Focus is on target(s)" />
                    </RadioButton.Content>
                </RadioButton>
                <RadioButton IsChecked="{Binding Type, ConverterParameter={x:Static coreModelEnums:AnimationType.BubblesScreen}, Converter={StaticResource RadioButtonEnumConverter}}" Margin="10" Foreground="White" Background="Black">
                    <RadioButton.Content>
                        <TextBlock  TextWrapping="Wrap"
                                    Text="Bubbles Screen: Animate the entire screen!" />
                    </RadioButton.Content>
                </RadioButton>
            </StackPanel>
            <RadioButton x:Name="ProjectileRB" GroupName="MainGroup"
                         Margin="10" Foreground="White" Background="Black">
                <RadioButton.Content>
                    <TextBlock  TextWrapping="Wrap"
                                Text="Projectile: A single ellipse heads from a source character to a target character" />
                </RadioButton.Content>
            </RadioButton>
            <StackPanel x:Name="ProjectileRadioStack" Visibility="{Binding ElementName=ProjectileRB, Path=IsChecked, Converter={StaticResource BoolVisibilityCollapseConverter}}" Margin="20,0,0,0">
                <RadioButton IsChecked="{Binding Type, ConverterParameter={x:Static coreModelEnums:AnimationType.ProjectileSelfToTarget}, Converter={StaticResource RadioButtonEnumConverter}}" Margin="10" Foreground="White" Background="Black">
                    <RadioButton.Content>
                        <TextBlock  TextWrapping="Wrap"
                                Text="Projectile: Self to Target" />
                    </RadioButton.Content>
                </RadioButton>
                <RadioButton IsChecked="{Binding Type, ConverterParameter={x:Static coreModelEnums:AnimationType.ProjectileSelfToTargetsInRange}, Converter={StaticResource RadioButtonEnumConverter}}" Margin="10" Foreground="White" Background="Black">
                    <RadioButton.Content>
                        <TextBlock  TextWrapping="Wrap"
                                Text="Projectile: Self to Targets in Range" />
                    </RadioButton.Content>
                </RadioButton>
                <RadioButton IsChecked="{Binding Type, ConverterParameter={x:Static coreModelEnums:AnimationType.ProjectileTargetToSelf}, Converter={StaticResource RadioButtonEnumConverter}}" Margin="10" Foreground="White" Background="Black">
                    <RadioButton.Content>
                        <TextBlock  TextWrapping="Wrap"
                                Text="Projectile: Target to Self" />
                    </RadioButton.Content>
                </RadioButton>
                <RadioButton IsChecked="{Binding Type, ConverterParameter={x:Static coreModelEnums:AnimationType.ProjectileTargetsInRangeToSelf}, Converter={StaticResource RadioButtonEnumConverter}}" Margin="10" Foreground="White" Background="Black">
                    <RadioButton.Content>
                        <TextBlock TextWrapping="Wrap"
                                Text="Projectile: Targets in Range to Self" />
                    </RadioButton.Content>
                </RadioButton>
                <GroupBox Grid.Row="1" Background="Black" Padding="10" Margin="0,10,0,0" Header="Constant Velocity Settings (Choose this to override Animation Time)">
                    <GroupBox.Resources>
                        <ResourceDictionary Source="pack://application:,,,/Rogue.NET;component/Themes/ExpressionDark.xaml" />
                    </GroupBox.Resources>
                    <StackPanel>
                        <Grid Height="36" Grid.Row="2" Margin="0,0,6,0">
                            <TextBlock FontSize="14" Foreground="White" Text="Velocity (pixels per second)" VerticalAlignment="Center" />
                            <wpftoolkit:DoubleUpDown Value="{Binding Velocity}" AllowTextInput="True" AllowSpin="True" FormatString="N0" Foreground="White" HorizontalAlignment="Right" VerticalAlignment="Center" Height="28" Width="100" />
                        </Grid>
                        <Grid Height="36" Grid.Row="1">
                            <TextBlock FontSize="14" Foreground="White" Text="Constant Velocity" VerticalAlignment="Center" />
                            <CheckBox IsChecked="{Binding ConstantVelocity}" VerticalAlignment="Center" HorizontalAlignment="Right" />
                        </Grid>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
            <RadioButton x:Name="SpiralRB" GroupName="MainGroup" Margin="10" Foreground="White" Background="Black">
                <RadioButton.Content>
                    <TextBlock  TextWrapping="Wrap"
                                Text="Spiral: An equi-distant set of ellipses surrounds and encircles the character" />
                </RadioButton.Content>
            </RadioButton>
            <StackPanel x:Name="SpiralRadioStack" Visibility="{Binding ElementName=SpiralRB, Path=IsChecked, Converter={StaticResource BoolVisibilityCollapseConverter}}" Margin="20,0,0,0">
                <RadioButton IsChecked="{Binding Type, ConverterParameter={x:Static coreModelEnums:AnimationType.SpiralSelf}, Converter={StaticResource RadioButtonEnumConverter}}" Margin="10" Foreground="White" Background="Black">
                    <RadioButton.Content>
                        <TextBlock  TextWrapping="Wrap"
                                    Text="Spiral Self: Focus is on invoker" />
                    </RadioButton.Content>
                </RadioButton>
                <RadioButton IsChecked="{Binding Type, ConverterParameter={x:Static coreModelEnums:AnimationType.SpiralTarget}, Converter={StaticResource RadioButtonEnumConverter}}" Margin="10" Foreground="White" Background="Black">
                    <RadioButton.Content>
                        <TextBlock  TextWrapping="Wrap"
                                    Text="Spiral Target: Focus is on target(s)" />
                    </RadioButton.Content>
                </RadioButton>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
