<UserControl x:Class="Rogue.NET.Scenario.Content.Views.SkillTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:coreView="clr-namespace:Rogue.NET.Core.View;assembly=Rogue.NET.Core"
             xmlns:local="clr-namespace:Rogue.NET.Scenario.Content.Views"
             xmlns:Dotway_WPF_Effects="clr-namespace:Dotway.WPF.Effects;assembly=Dotway.WPF.Effects"
             xmlns:coreModelEnums="clr-namespace:Rogue.NET.Core.Model.Enums;assembly=Rogue.NET.Core"
             xmlns:commonView="clr-namespace:Rogue.NET.Common.View;assembly=Rogue.NET.Common">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Scenario;component/Resources/Dictionaries/ItemGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Common;component/Resource/Dictionaries/RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Common;component/Resource/Dictionaries/ShinyTextButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Common;component/Resource/Dictionaries/ToggleSwitch.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Common;component/Resource/Dictionaries/Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Core;component/Resource/Converter.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <!-- Skill Set Data Template -->
            <DataTemplate x:Key="SkillSetDataTemplate">
                <Border HorizontalAlignment="Stretch" Background="Transparent">

                    <!-- Skill Set -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        
                        <!-- Symbol -->
                        <Image HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Stretch="None">
                            <Image.Source>
                                <MultiBinding Converter="{StaticResource ScenarioImageSourceMultiConverter}">
                                    <Binding Path="CharacterSymbol" />
                                    <Binding Path="CharacterColor" />
                                    <Binding Path="Icon" />
                                    <Binding Path="DisplayIcon" />
                                    <Binding Path="SmileyMood" />
                                    <Binding Path="SmileyBodyColor" />
                                    <Binding Path="SmileyLineColor" />
                                    <Binding Path="SmileyAuraColor" />
                                    <Binding Path="SymbolType" />
                                </MultiBinding>
                            </Image.Source>
                        </Image>

                        <!-- Name / Selected Skill Name -->
                        <TextBlock Grid.Column="1" FontSize="18" Foreground="Tan" 
                                   HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" 
                                   Text="{Binding DisplayName}" />

                        <!-- Locked / Unlocked -->
                        <TextBlock Grid.Column="2" FontFamily="{StaticResource FontAwesome}" FontSize="18" Foreground="DarkGray"
                                   HorizontalAlignment="Right" VerticalAlignment="Center" Margin="4" Opacity="1"
                                   Visibility="{Binding IsLearned, Converter={StaticResource BoolInverseVisibilityCollapseConverter}}"
                                   Text="&#xf023;">
                            <TextBlock.ToolTip>
                                <!-- Tooltip with Purple Smiley -->
                                <ToolTip Background="Transparent"
                                         BorderBrush="Transparent"
                                         Padding="0"
                                         Margin="0">
                                    <Border Background="Black" Padding="10" BorderBrush="Purple" BorderThickness="1.5" CornerRadius="8">
                                        <StackPanel Orientation="Horizontal">
                                            <coreView:Smiley VerticalAlignment="Center" Margin="4" SmileyColor="Purple" SmileyLineColor="Yellow" Width="20" Height="30" SmileyMood="Happy" SmileyRadius="3" />
                                            <StackPanel>
                                                <TextBlock Text="Skill is currently locked" Foreground="White" FontSize="14" Margin="4" />
                                                <TextBlock Foreground="LightBlue" FontSize="14" Margin="0,4,0,0">
                                                    <Run Text="Required Level: " />
                                                    <Run Text="{Binding LevelLearned}" />
                                                </TextBlock>
                                                <TextBlock Foreground="LightBlue" FontSize="14" Margin="0,4,0,0"
                                                           Visibility="{Binding HasReligiousAffiliationRequirement, Converter={StaticResource BoolVisibilityCollapseConverter}}">
                                                    <Run Text="Required Religion: " />
                                                    <Run Text="{Binding ReligiousAffiliationRequirementName}" />
                                                    <Run Text=" " />
                                                    <Run Text="{Binding ReligiousAffiliationRequirementLevel, StringFormat=P0}" />
                                                </TextBlock>
                                            </StackPanel>
                                        </StackPanel>
                                    </Border>
                                </ToolTip>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        
                    </Grid>
                    
                </Border>
            </DataTemplate>
            
            <!-- Skill Data Template -->
            <DataTemplate x:Key="SkillDataTemplate">
                <Border IsEnabled="{Binding IsLearned}" HorizontalAlignment="Stretch" Background="Transparent">

                    <!-- Skill Set (or) Skill -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!-- Symbol -->
                        <Image HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="None" Margin="4" DataContext="{Binding ElementName=SkillSetLB, Path=SelectedItem}">
                            <Image.Source>
                                <MultiBinding Converter="{StaticResource ScenarioImageSourceMultiConverter}">
                                    <Binding Path="CharacterSymbol" />
                                    <Binding Path="CharacterColor" />
                                    <Binding Path="Icon" />
                                    <Binding Path="DisplayIcon" />
                                    <Binding Path="SmileyMood" />
                                    <Binding Path="SmileyBodyColor" />
                                    <Binding Path="SmileyLineColor" />
                                    <Binding Path="SmileyAuraColor" />
                                    <Binding Path="SymbolType" />
                                </MultiBinding>
                            </Image.Source>
                        </Image>

                        <!-- Name / Selected Skill Name -->
                        <TextBlock Grid.Column="1" FontSize="18" Foreground="Tan" HorizontalAlignment="Left" 
                                   VerticalAlignment="Center" Margin="4"
                                   Text="{Binding Alteration.DisplayName}" />
                        
                        <!-- Skill Point Cost -->
                        <TextBlock Grid.Column="2" FontSize="16" VerticalAlignment="Center"
                                   Visibility="{Binding IsLearned, Converter={StaticResource BoolInverseVisibilityCollapseConverter}}"
                                   Margin="4">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSkillPointRequirementMet}" Value="True">
                                            <Setter Property="Foreground" Value="LightGray" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSkillPointRequirementMet}" Value="False">
                                            <Setter Property="Foreground" Value="Red" />
                                        </DataTrigger>                                        
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <Run Text="{Binding Path=DataContext.SkillPoints, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:SkillTree}}}" />                            
                            <Run Text="/" />
                            <Run Text="{Binding SkillPointRequirement}" />
                        </TextBlock>
                        
                        <!-- Locked / Unlocked -->
                        <TextBlock Grid.Column="3" FontFamily="{StaticResource FontAwesome}" FontSize="18" Foreground="DarkGray"
                                   HorizontalAlignment="Right" VerticalAlignment="Center" Margin="4"
                                   Visibility="{Binding IsLearned, Converter={StaticResource BoolInverseVisibilityCollapseConverter}}"
                                   Text="&#xf023;">
                            <TextBlock.ToolTip>
                                <!-- Tooltip with Purple Smiley -->
                                <ToolTip Background="Transparent"
                                         BorderBrush="Transparent"
                                         Padding="0"
                                         Margin="0">
                                    <Border Background="Black" Padding="10" BorderBrush="Purple" BorderThickness="1.5" CornerRadius="8">
                                        <StackPanel Orientation="Horizontal">
                                            <coreView:Smiley VerticalAlignment="Top" SmileyColor="Purple" SmileyLineColor="Yellow" Width="20" Height="30" SmileyMood="Happy" SmileyRadius="3" />
                                            <StackPanel>
                                                <TextBlock Text="Skill is currently locked" Foreground="White" FontSize="14" Margin="4" />
                                                <TextBlock Foreground="LightBlue" FontSize="14" Margin="0,4,0,0">
                                                    <Run Text="Required Level: " />
                                                    <Run Text="{Binding LevelLearned}" />
                                                </TextBlock>
                                                <TextBlock Foreground="LightBlue" FontSize="14" Margin="0,4,0,0"
                                                       Visibility="{Binding HasReligiousAffiliationRequirement, Converter={StaticResource BoolVisibilityCollapseConverter}}">
                                                        <Run Text="Required Religion: " />
                                                        <Run Text="{Binding ReligiousAffiliationRequirementName}" />
                                                        <Run Text=" " />
                                                        <Run Text="{Binding ReligiousAffiliationRequirementLevel, StringFormat=P0}" />
                                                </TextBlock>
                                            </StackPanel>
                                        </StackPanel>
                                    </Border>
                                </ToolTip>                                
                            </TextBlock.ToolTip>
                        </TextBlock>

                    </Grid>
                </Border>
            </DataTemplate>

            <Style TargetType="ListBox" x:Key="SkillListBoxStyle">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Style>
            
            <Style TargetType="ListBoxItem" x:Key="SkillSetItemContainerStyle">
                <Setter Property="Height" Value="60" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border x:Name="border" Background="#8F000000" BorderThickness="1" CornerRadius="8">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#8F111111" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="#8F333333" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#8F555555" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="#8F888888" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <Dotway_WPF_Effects:GrayscaleEffect DesaturationFactor="0" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <DataTrigger Binding="{Binding IsLearned}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ListBoxItem" x:Key="SkillItemContainerStyle">
                <Setter Property="Height" Value="60" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border x:Name="border" Background="#8F000000" BorderThickness="1" CornerRadius="8">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#8F111111" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="#8F333333" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#8F555555" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="#8F888888" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>            
            
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.Background>
            <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,0.5" Opacity="0.2" RadiusX="1" RadiusY="1">
                <GradientStop Color="Black" Offset="0.6"/>
                <GradientStop Color="{Binding SmileyAuraColor}" Offset="0"/>
            </RadialGradientBrush>
        </Grid.Background>
        
        <!-- Skill Point Indicator -->
        <StackPanel Grid.ColumnSpan="2">
            
            <!-- Instructions --> 
            <TextBlock Foreground="Tan" TextWrapping="Wrap" FontSize="18" HorizontalAlignment="Stretch" Margin="10"
                   Text="Skills allow your player to develop new abilities to fend off enemies and find your way through the scenario. Choose wisely and spend your points carefully to acheive success!" />

            <!-- Points Available -->
            <TextBlock HorizontalAlignment="Right" FontSize="18" Margin="10" Foreground="Gold">
                <Run Text="Points: " />
                <Run Text="{Binding SkillPoints}" />
            </TextBlock>

            <!-- Point Experience -->           
            <commonView:ProgressBar HorizontalAlignment="Right" Width="250" Height="32" BarColor1="Purple" Margin="10" Header="Point Exp" ValueTextBrush="Transparent" Value="{Binding SkillPointExperience}" Value2="{Binding SkillPointExperience}" ValueMax="{Binding SkillPointExperienceNext}" />
        </StackPanel>

        <!-- Skill Sets -->
        <ListBox x:Name="SkillSetLB" 
                 Margin="10"
                 Grid.Row="1"
                 VerticalAlignment="Top"
                 Style="{StaticResource SkillListBoxStyle}"
                 ItemsSource="{Binding SkillSets}"
                 ItemTemplate="{StaticResource SkillSetDataTemplate}"
                 ItemContainerStyle="{StaticResource SkillSetItemContainerStyle}">
        </ListBox>

        <!-- Skills -->
        <ListBox x:Name="SkillLB" 
                 Grid.Column="1"
                 Grid.Row="1"
                 Margin="10"
                 VerticalAlignment="Top"
                 Style="{StaticResource SkillListBoxStyle}"
                 IsEnabled="{Binding ElementName=SkillSetLB, Path=SelectedItem.IsLearned}"
                 ItemsSource="{Binding ElementName=SkillSetLB, Path=SelectedItem.Skills}"
                 ItemTemplate="{StaticResource SkillDataTemplate}"
                 ItemContainerStyle="{StaticResource SkillItemContainerStyle}">
        </ListBox>
        
        <!-- Locked Skill Detail -->
        <Border Grid.Column="2" Grid.RowSpan="2" Background="#3F000000" CornerRadius="10" BorderBrush="Transparent" BorderThickness="1"
                DataContext="{Binding ElementName=SkillLB, Path=SelectedItem}"
                Visibility="{Binding ElementName=SkillLB, Path=SelectedItem.IsLearned, FallbackValue=Collapsed, Converter={StaticResource BoolInverseVisibilityCollapseConverter}}">
            
            <StackPanel>
                <Grid Margin="10">
                    <TextBlock Text="{Binding Alteration.DisplayName}" FontSize="20" Foreground="Tan" HorizontalAlignment="Left" />
                    <TextBlock Text="(Locked)" Foreground="Red" FontSize="18" HorizontalAlignment="Right" />
                </Grid>

                <Grid Margin="10">
                    <TextBlock Text="{Binding Description}" TextWrapping="Wrap" Foreground="White" FontSize="18" HorizontalAlignment="Left" />
                </Grid>

                <Grid Margin="10">
                    <TextBlock Text="Requirements" FontSize="20" Foreground="Tan" HorizontalAlignment="Left" />
                    <Button Cursor="Hand"
                            Visibility="{Binding AreAllRequirementsMet, Converter={StaticResource BoolVisibilityCollapseConverter}}"
                            Command="{Binding UnlockCommand}"
                            Style="{StaticResource MetroButtonStyle}"
                            Background="#3F111111"
                            BorderBrush="#8FFFFFFF"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock FontFamily="{StaticResource FontAwesome}" Text="&#xf023;" FontSize="20" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10" />
                            <TextBlock Text="Unlock" FontSize="20" HorizontalAlignment="Left" Margin="10" VerticalAlignment="Center" Foreground="White" />
                        </StackPanel>
                    </Button>
                </Grid>

                <Grid Margin="40,10,10,10">
                    <StackPanel>
                        <TextBlock FontSize="18">
                            <Run Text="Minimum Level: " Foreground="Tan" />
                            <Run Text="{Binding LevelRequirement}" Foreground="{Binding IsLevelRequirementMet, ConverterParameter=White, Converter={StaticResource BoolToValidationForegroundConverter}}" />
                        </TextBlock>
                        <TextBlock FontSize="18">
                            <Run Text="Skill Points: " Foreground="Tan" />
                            <Run Text="{Binding SkillPointRequirement}" Foreground="{Binding IsSkillPointRequirementMet, ConverterParameter=White, Converter={StaticResource BoolToValidationForegroundConverter}}" />
                        </TextBlock>
                        <TextBlock FontSize="18"
                                   Visibility="{Binding HasReligiousAffiliationRequirement, Converter={StaticResource BoolVisibilityCollapseConverter}}">
                            <Run Text="Religious Affiliation Requirement: " Foreground="Tan" />
                            <Run Text="{Binding ReligiousAffiliationRequirementLevel, StringFormat=P0}" 
                                 Foreground="{Binding IsReligiousAffiliationRequirementMet, ConverterParameter=White, Converter={StaticResource BoolToValidationForegroundConverter}}" />
                            <Run Text=" " />
                            <Run Text="{Binding ReligiousAffiliationRequirementName}" 
                                 Foreground="{Binding IsReligiousAffiliationRequirementMet, ConverterParameter=White, Converter={StaticResource BoolToValidationForegroundConverter}}" />
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </StackPanel>
            
        </Border>

        <!-- Unlocked Skill Detail -->
        <Border Grid.Column="2" Grid.RowSpan="2" Background="#3F000000" CornerRadius="10" BorderBrush="Transparent" BorderThickness="1"
                DataContext="{Binding ElementName=SkillLB, Path=SelectedItem}"
                Visibility="{Binding ElementName=SkillLB, Path=SelectedItem.IsLearned, FallbackValue=Collapsed, Converter={StaticResource BoolVisibilityCollapseConverter}}">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Alteration Name -->
                <Grid Margin="10">
                    <TextBlock Text="{Binding Alteration.DisplayName}" FontSize="20" Foreground="Tan" HorizontalAlignment="Left" />
                </Grid>

                <!-- Alteration Description -->
                <Grid Margin="10" Grid.Row="1">
                    <TextBlock Text="{Binding Description}" TextWrapping="Wrap" Foreground="White" FontSize="18" HorizontalAlignment="Left" />
                </Grid>
                
                <!-- Alteration Cost / Effect / Aura Effect Attributes -->
                <ScrollViewer x:Name="scrollViewer"
                          Grid.Row="2"
                          Background="Transparent"
                          BorderBrush="Transparent"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <WrapPanel>

                        <!-- Primary Properties 1 -->
                        <Border Margin="10" Background="#3F000000" CornerRadius="10" Width="300" Padding="4">
                            <StackPanel>

                                <Grid Margin="4">
                                    <TextBlock Text="Primary Properties" Foreground="Tan" FontStyle="Italic" FontSize="18" HorizontalAlignment="Right" />
                                </Grid>

                                <Grid Margin="4">
                                    <TextBlock Text="Effect Type" Foreground="Tan" FontSize="18" HorizontalAlignment="Left" />
                                    <TextBlock Text="{Binding Alteration.DisplayType}" FontSize="18" Foreground="White" HorizontalAlignment="Right" />
                                </Grid>

                                <!-- Alteration Block Type-->
                                <Grid Margin="4">
                                    <TextBlock Text="Block Type" Foreground="Tan" FontSize="18" HorizontalAlignment="Left" />
                                    <TextBlock Text="{Binding Alteration.BlockType}" FontSize="18" Foreground="White" HorizontalAlignment="Right" />
                                </Grid>

                                <!-- Alteration Cost Type-->
                                <Grid Margin="4">
                                    <TextBlock Text="Cost Application" Foreground="Tan" FontSize="18" HorizontalAlignment="Left" />
                                    <TextBlock Text="{Binding Alteration.AlterationCostType}" FontSize="18" Foreground="White" HorizontalAlignment="Right" />
                                </Grid>

                                <!-- Alteration IsStackable -->
                                <Grid Margin="4">
                                    <TextBlock Text="Is Stackable" Foreground="Tan" FontSize="18" HorizontalAlignment="Left" />
                                    <TextBlock Text="{Binding Alteration.IsStackable}" FontSize="18" Foreground="White" HorizontalAlignment="Right" />
                                </Grid>

                                <!-- Alteration Can See Invisible -->
                                <Grid Margin="4">
                                    <TextBlock Text="See Invisible" Foreground="Tan" FontSize="18" HorizontalAlignment="Left" />
                                    <TextBlock Text="{Binding Alteration.CanSeeInvisibleCharacters}" FontSize="18" Foreground="White" HorizontalAlignment="Right" />
                                </Grid>
                            </StackPanel>
                        </Border>

                        <!-- Primary Properties 2 -->
                        <Border Margin="10" Background="#3F000000" CornerRadius="10" Width="300" Padding="4">
                            <Border.Visibility>
                                <MultiBinding Converter="{StaticResource BoolORVisibilityMultiConverter}">
                                    <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporarySource}" />
                                    <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporaryTarget}" />
                                    <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporaryAllTargets}" />
                                    <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.Remedy}" />
                                    <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.PassiveAura}" />
                                    <Binding Path="Alteration.IsAlteredState" />
                                </MultiBinding>
                            </Border.Visibility>
                            <StackPanel>

                                <Grid Margin="4">
                                    <TextBlock Text="More Properties" Foreground="Tan" FontSize="18" FontStyle="Italic" HorizontalAlignment="Right" />
                                </Grid>

                                <!-- Alteration Event Time -->
                                <Grid Margin="4">
                                    <Grid.Visibility>
                                        <MultiBinding Converter="{StaticResource BoolORVisibilityMultiConverter}">
                                            <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporarySource}" />
                                            <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporaryTarget}" />
                                            <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporaryAllTargets}" />
                                        </MultiBinding>
                                    </Grid.Visibility>
                                    <TextBlock Text="Event Time" Foreground="Tan" FontSize="18" HorizontalAlignment="Left" />
                                    <TextBlock FontSize="18" Foreground="White" HorizontalAlignment="Right">
                                        <Run Text="{Binding Alteration.EventTime}" Foreground="White" />
                                    </TextBlock>
                                </Grid>

                                <!-- Alteration Altered State -->
                                <Grid Margin="4"
                                      Visibility="{Binding Alteration.IsAlteredState, Converter={StaticResource BoolVisibilityCollapseConverter}}">
                                    <TextBlock Text="Altered State" Foreground="Tan" FontSize="18" HorizontalAlignment="Left" />
                                    <TextBlock FontSize="18" Foreground="White" HorizontalAlignment="Right">
                                    <Image Stretch="None">
                                        <Image.Source>
                                            <MultiBinding Converter="{StaticResource ScenarioImageSourceMultiConverter}">
                                                <Binding Path="Alteration.AlteredState.CharacterSymbol" />
                                                <Binding Path="Alteration.AlteredState.CharacterColor" />
                                                <Binding Path="Alteration.AlteredState.Icon" />
                                                <Binding Path="Alteration.AlteredState.DisplayIcon" />
                                                <Binding Path="Alteration.AlteredState.SmileyMood" />
                                                <Binding Path="Alteration.AlteredState.SmileyBodyColor" />
                                                <Binding Path="Alteration.AlteredState.SmileyLineColor" />
                                                <Binding Path="Alteration.AlteredState.SmileyAuraColor" />
                                                <Binding Path="Alteration.AlteredState.SymbolType" />
                                            </MultiBinding>
                                        </Image.Source>
                                    </Image>                        
                                    <Run Text="{Binding Alteration.AlteredState.DisplayName}" Foreground="White" />
                                    </TextBlock>
                                </Grid>

                                <!-- Alteration Remedied State -->
                                <Grid Margin="4">
                                    <Grid.Visibility>
                                        <MultiBinding Converter="{StaticResource BoolORVisibilityMultiConverter}">
                                            <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.Remedy}" />
                                        </MultiBinding>
                                    </Grid.Visibility>
                                    <TextBlock FontSize="18" HorizontalAlignment="Left">
                                        <Run Text="Remedied State" Foreground="Tan" />
                                    </TextBlock>
                                    <TextBlock Foreground="White" FontSize="18" HorizontalAlignment="Right">
                                        <Image Stretch="None">
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource ScenarioImageSourceMultiConverter}">
                                                    <Binding Path="Alteration.RemediedState.CharacterSymbol" />
                                                    <Binding Path="Alteration.RemediedState.CharacterColor" />
                                                    <Binding Path="Alteration.RemediedState.Icon" />
                                                    <Binding Path="Alteration.RemediedState.DisplayIcon" />
                                                    <Binding Path="Alteration.RemediedState.SmileyMood" />
                                                    <Binding Path="Alteration.RemediedState.SmileyBodyColor" />
                                                    <Binding Path="Alteration.RemediedState.SmileyLineColor" />
                                                    <Binding Path="Alteration.RemediedState.SmileyAuraColor" />
                                                    <Binding Path="Alteration.RemediedState.SymbolType" />
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                        <Run Text="{Binding Alteration.RemediedState.DisplayName}" Foreground="White" />
                                    </TextBlock>
                                </Grid>

                                <!-- Alteration Aura Altered State -->
                                <Grid Margin="4">
                                    <Grid.Visibility>
                                        <MultiBinding Converter="{StaticResource BoolORVisibilityMultiConverter}">
                                            <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.PassiveAura}" />
                                        </MultiBinding>
                                    </Grid.Visibility>                                    
                                    <TextBlock FontSize="18" HorizontalAlignment="Left">
                                        <Run Text="Aura Altered State" Foreground="Tan" />
                                    </TextBlock>
                                    <TextBlock Foreground="White" FontSize="18" HorizontalAlignment="Right">
                                    <Image Stretch="None">
                                        <Image.Source>
                                            <MultiBinding Converter="{StaticResource ScenarioImageSourceMultiConverter}">
                                                <Binding Path="Alteration.AuraAlteredState.CharacterSymbol" />
                                                <Binding Path="Alteration.AuraAlteredState.CharacterColor" />
                                                <Binding Path="Alteration.AuraAlteredState.Icon" />
                                                <Binding Path="Alteration.AuraAlteredState.DisplayIcon" />
                                                <Binding Path="Alteration.AuraAlteredState.SmileyMood" />
                                                <Binding Path="Alteration.AuraAlteredState.SmileyBodyColor" />
                                                <Binding Path="Alteration.AuraAlteredState.SmileyLineColor" />
                                                <Binding Path="Alteration.AuraAlteredState.SmileyAuraColor" />
                                                <Binding Path="Alteration.AuraAlteredState.SymbolType" />
                                            </MultiBinding>
                                        </Image.Source>
                                    </Image>
                                    <Run Text="{Binding Alteration.AuraAlteredState.DisplayName}" Foreground="White" />
                                    </TextBlock>
                                </Grid>

                                <!-- Alteration Effect Range -->
                                <Grid Margin="4">
                                    <Grid.Visibility>
                                        <MultiBinding Converter="{StaticResource BoolORVisibilityMultiConverter}">
                                            <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.PassiveAura}" />
                                        </MultiBinding>
                                    </Grid.Visibility>                                    
                                    <TextBlock FontSize="18" HorizontalAlignment="Left" Text="Effect Range" Foreground="Tan" />
                                    <TextBlock Foreground="White" FontSize="18" HorizontalAlignment="Right" Text="{Binding Alteration.EffectRange, StringFormat=F1}" />
                                </Grid>

                            </StackPanel>
                        </Border>

                        <!-- Alteration Cost -->
                        <Border Margin="10" Background="#3F000000" CornerRadius="10" Width="300" Padding="4"
                                Visibility="{Binding Alteration.AlterationCostAttributes, Converter={StaticResource CollectionNonEmptyVisibilityConverter}}">
                            <StackPanel>
                                <TextBlock Margin="4" Foreground="Tan" FontSize="18" Text="Cost" HorizontalAlignment="Right" FontStyle="Italic" />
                                <ItemsControl ItemsSource="{Binding Alteration.AlterationCostAttributes}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="4">
                                                <TextBlock Text="{Binding AttributeName}" Foreground="Tan" FontSize="18" HorizontalAlignment="Left" />
                                                <TextBlock Text="{Binding AttributeValue}" Foreground="White" FontSize="18" HorizontalAlignment="Right" />
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </Border>

                        <!-- Alteration Effect -->
                        <Border Margin="10" Background="#3F000000" CornerRadius="10" Width="300" Padding="4">
                            <Border.Visibility>
                                <MultiBinding Converter="{StaticResource BoolORVisibilityMultiConverter}">
                                    <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.PassiveSource}" />
                                    <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporarySource}" />
                                    <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporaryTarget}" />
                                    <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.TemporaryAllTargets}" />
                                    <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.PermanentSource}" />
                                    <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.PermanentTarget}" />
                                    <Binding Path="Alteration.Type" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static coreModelEnums:AlterationType.PermanentAllTargets}" />
                                </MultiBinding>
                            </Border.Visibility>
                            <StackPanel>
                                <TextBlock Margin="4" Foreground="Tan" FontSize="18" Text="Effect" HorizontalAlignment="Right" FontStyle="Italic" />
                                <ItemsControl ItemsSource="{Binding Alteration.AlterationEffectAttributes}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="4">
                                                <TextBlock Text="{Binding AttributeName}" Foreground="Tan" FontSize="18" HorizontalAlignment="Left" />
                                                <TextBlock Text="{Binding AttributeValue}" Foreground="White" FontSize="18" HorizontalAlignment="Right" />
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </Border>

                        <!-- Alteration Aura Effect -->
                        <Border Margin="10" Background="#3F000000" CornerRadius="10" Width="300" Padding="4"
                                Visibility="{Binding Alteration.Type, Converter={StaticResource ParameterVisibilityCollapsedConverter}, ConverterParameter={x:Static coreModelEnums:AlterationType.PassiveAura}}">
                            <StackPanel>
                                <TextBlock Margin="4" Foreground="Tan" FontSize="18" Text="Aura Effect" HorizontalAlignment="Right" FontStyle="Italic" />
                                <ItemsControl ItemsSource="{Binding Alteration.AlterationAuraEffectAttributes}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="4">
                                                <TextBlock Text="{Binding AttributeName}" Foreground="Tan" FontSize="18" HorizontalAlignment="Left" />
                                                <TextBlock Text="{Binding AttributeValue}" Foreground="White" FontSize="18" HorizontalAlignment="Right" />
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </Border>

                        <!-- Alteration Effect Attack Attributes -->
                        <Border Margin="10" Background="#3F000000" CornerRadius="10" Width="300" Padding="4"
                                Visibility="{Binding Alteration.Type, Converter={StaticResource ParameterVisibilityCollapsedConverter}, ConverterParameter={x:Static coreModelEnums:AlterationType.AttackAttribute}}">
                            <StackPanel>
                                <TextBlock Margin="4" Foreground="Tan" FontSize="18" Text="Effect Attack Attributes" HorizontalAlignment="Right" FontStyle="Italic" />
                                <ItemsControl ItemsSource="{Binding Alteration.AlterationEffectAttackAttributes}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <local:DungeonEncyclopediaAttackAttributeCtrl />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </Border>
                        
                    </WrapPanel>
                </ScrollViewer>
            </Grid>
        </Border>
    </Grid>
</UserControl>
