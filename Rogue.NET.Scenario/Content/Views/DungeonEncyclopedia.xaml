<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converter="clr-namespace:Rogue.NET.Scenario.Converter"
             xmlns:control="clr-namespace:Rogue.NET.Scenario.Control"
             xmlns:local="clr-namespace:Rogue.NET.Scenario.Views" 
             mc:Ignorable="d" 
             x:Class="Rogue.NET.Scenario.Views.DungeonEncyclopedia" d:DesignWidth="1241.5" d:DesignHeight="606.42">
	<UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Rogue.NET.Core;component/Resource/Converter.xaml" />
                <ResourceDictionary>
                    <converter:RogueMetaDataCategoryFilter x:Key="RogueMetaDataCategoryFilter" />
                    <DataTemplate x:Key="AttackAttributeTemplate">
                        <local:DungeonEncyclopediaAttackAttributeCtrl Background="Black" />
                    </DataTemplate>
                    <Style x:Key="ButtonFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="2" SnapsToDevicePixels="true"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#F3F3F3" Offset="0"/>
                        <GradientStop Color="#EBEBEB" Offset="0.5"/>
                        <GradientStop Color="#DDDDDD" Offset="0.5"/>
                        <GradientStop Color="#CDCDCD" Offset="1"/>
                    </LinearGradientBrush>
                    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
                    <Style x:Key="FilterButtonStyle" TargetType="{x:Type ToggleButton}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
                        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                                        <Trigger Property="IsChecked" Value="true"/>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="#ADADAD"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="ButtonFocusVisual3">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="ButtonFocusVisual4">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="EllipseListBoxItemStyle" TargetType="ListBoxItem">
                        <Setter Property="Width" Value="40" />
                        <Setter Property="Height" Value="60" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Grid>
                                        <Ellipse x:Name="RefractionLayer">
                                            <Ellipse.Fill>
                                                <RadialGradientBrush Opacity="0.2" GradientOrigin="0.5,1.0">
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform CenterX="0.5" 
                                                                            CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                            <TranslateTransform X="0.02" Y="0.3"/>
                                                        </TransformGroup>
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Offset="1" Color="#00000000"/>
                                                    <GradientStop x:Name="RefractionGradient" Offset="0.4" Color="#FFFFFFFF"/>
                                                </RadialGradientBrush>
                                            </Ellipse.Fill>
                                        </Ellipse>
                                        <!-- Reflection Layer -->
                                        <Path x:Name="ReflectionLayer" VerticalAlignment="Top" Stretch="Fill">
                                            <Path.RenderTransform>
                                                <ScaleTransform ScaleY="0.5" />
                                            </Path.RenderTransform>
                                            <Path.Data>
                                                <PathGeometry>
                                                    <PathFigure IsClosed="True" StartPoint="98.999,45.499">
                                                        <BezierSegment Point1="98.999,54.170" 
                                                                       Point2="89.046,52.258" 
                                                                       Point3="85.502,51.029"/>
                                                        <BezierSegment IsSmoothJoin="True" 
                                                                       Point1="75.860,47.685" 
                                                                       Point2="69.111,45.196" 
                                                                       Point3="50.167,45.196"/>
                                                        <BezierSegment Point1="30.805,45.196" 
                                                                       Point2="20.173,47.741" 
                                                                       Point3="10.665,51.363"/>
                                                        <BezierSegment IsSmoothJoin="True" 
                                                                       Point1="7.469,52.580" 
                                                                       Point2="1.000,53.252" 
                                                                       Point3="1.000,44.999"/>
                                                        <BezierSegment Point1="1.000,39.510" 
                                                                       Point2="0.884,39.227" 
                                                                       Point3="2.519,34.286"/>
                                                        <BezierSegment IsSmoothJoin="True" 
                                                                       Point1="9.106,14.370" 
                                                                       Point2="27.875,0" 
                                                                       Point3="50,0"/>
                                                        <BezierSegment Point1="72.198,0" 
                                                                       Point2="91.018,14.466" 
                                                                       Point3="97.546,34.485"/>
                                                        <BezierSegment IsSmoothJoin="True" 
                                                                       Point1="99.139,39.369" 
                                                                       Point2="98.999,40.084" 
                                                                       Point3="98.999,45.499"/>
                                                    </PathFigure>
                                                </PathGeometry>
                                            </Path.Data>
                                            <Path.Fill>
                                                <RadialGradientBrush Opacity="0.2" GradientOrigin="0.5,0.5">
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform CenterX="0.5" 
                                                                            CenterY="0.5" 
                                                                            ScaleX="1" 
                                                                            ScaleY="2"/>
                                                            <TranslateTransform X="0" Y="0.5"/>
                                                        </TransformGroup>
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Offset="1" Color="#FFFFFFFF"/>
                                                    <GradientStop Offset="0.85" Color="#92FFFFFF"/>
                                                    <GradientStop Offset="0" Color="#00000000"/>
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <ContentPresenter Content="{Binding}" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="RefractionLayer" Property="Fill">
                                                <Setter.Value>
                                                    <RadialGradientBrush GradientOrigin="0.5,1.0">
                                                        <RadialGradientBrush.RelativeTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform CenterX="0.5" CenterY="0.5" 
                                                                                ScaleX="1.5" ScaleY="1.5"/>
                                                                <TranslateTransform X="0.02" Y="0.3"/>
                                                            </TransformGroup>
                                                        </RadialGradientBrush.RelativeTransform>
                                                        <GradientStop Offset="1" Color="#00000000"/>
                                                        <GradientStop Offset="0.45" Color="#FFFFFFFF"/>
                                                    </RadialGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="ReflectionLayer" Property="Fill">
                                                <Setter.Value>
                                                    <RadialGradientBrush GradientOrigin="0.5,0.5">
                                                        <RadialGradientBrush.RelativeTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform CenterX="0.5" CenterY="0.5" 
                                                                                ScaleX="1" ScaleY="2"/>
                                                                <TranslateTransform X="0" Y="0.5"/>
                                                            </TransformGroup>
                                                        </RadialGradientBrush.RelativeTransform>
                                                        <GradientStop Offset="1" Color="#FFFFFFFF" />
                                                        <GradientStop Offset="0.85" Color="#BBFFFFFF"/>
                                                        <GradientStop Offset="0" Color="#00000000"/>
                                                    </RadialGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="RefractionLayer" Property="Fill">
                                                <Setter.Value>
                                                    <RadialGradientBrush GradientOrigin="0.5,1.0">
                                                        <RadialGradientBrush.RelativeTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform CenterX="0.5" CenterY="0.5" 
                                                                                ScaleX="1.5" ScaleY="1.5"/>
                                                                <TranslateTransform X="0.02" Y="0.3"/>
                                                            </TransformGroup>
                                                        </RadialGradientBrush.RelativeTransform>
                                                        <GradientStop Offset="1" Color="#00000000"/>
                                                        <GradientStop Offset="0.3" Color="#FFFFFFFF"/>
                                                    </RadialGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="ReflectionLayer" Property="Fill">
                                                <Setter.Value>
                                                    <RadialGradientBrush GradientOrigin="0.5,0.5">
                                                        <RadialGradientBrush.RelativeTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform CenterX="0.5" CenterY="0.5" 
                                                                                ScaleX="1" ScaleY="2"/>
                                                                <TranslateTransform X="0" Y="0.5"/>
                                                            </TransformGroup>
                                                        </RadialGradientBrush.RelativeTransform>
                                                        <GradientStop Offset="1" Color="#CCFFFFFF"/>
                                                        <GradientStop Offset="0.85" Color="#66FFFFFF"/>
                                                        <GradientStop Offset="0" Color="#00000000"/>
                                                    </RadialGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>

                                        <!-- Objective -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsObjective}" Value="True" />
                                                <Condition Binding="{Binding IsUnique}" Value="True" />
                                                <Condition Binding="{Binding IsCursed}" Value="True" />
                                                <Condition Binding="{Binding IsIdentified}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="RefractionLayer" Property="Fill">
                                                <Setter.Value>
                                                    <RadialGradientBrush Opacity="0.8" GradientOrigin="0.5,1.0">
                                                        <RadialGradientBrush.RelativeTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform CenterX="0.5" 
                                                                            CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                                <TranslateTransform X="0.02" Y="0.3"/>
                                                            </TransformGroup>
                                                        </RadialGradientBrush.RelativeTransform>
                                                        <GradientStop Offset="1" Color="#00000000"/>
                                                        <GradientStop Offset="0.4" Color="Cyan"/>
                                                    </RadialGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsObjective}" Value="True" />
                                                <Condition Binding="{Binding IsUnique}" Value="True" />
                                                <Condition Binding="{Binding IsCursed}" Value="False" />
                                                <Condition Binding="{Binding IsIdentified}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="RefractionLayer" Property="Fill">
                                                <Setter.Value>
                                                    <RadialGradientBrush Opacity="0.8" GradientOrigin="0.5,1.0">
                                                        <RadialGradientBrush.RelativeTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform CenterX="0.5" 
                                                                            CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                                <TranslateTransform X="0.02" Y="0.3"/>
                                                            </TransformGroup>
                                                        </RadialGradientBrush.RelativeTransform>
                                                        <GradientStop Offset="1" Color="#00000000"/>
                                                        <GradientStop Offset="0.4" Color="Cyan"/>
                                                    </RadialGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsObjective}" Value="True" />
                                                <Condition Binding="{Binding IsUnique}" Value="False" />
                                                <Condition Binding="{Binding IsCursed}" Value="True" />
                                                <Condition Binding="{Binding IsIdentified}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="RefractionLayer" Property="Fill">
                                                <Setter.Value>
                                                    <RadialGradientBrush Opacity="0.8" GradientOrigin="0.5,1.0">
                                                        <RadialGradientBrush.RelativeTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform CenterX="0.5" 
                                                                            CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                                <TranslateTransform X="0.02" Y="0.3"/>
                                                            </TransformGroup>
                                                        </RadialGradientBrush.RelativeTransform>
                                                        <GradientStop Offset="1" Color="#00000000"/>
                                                        <GradientStop Offset="0.4" Color="Cyan"/>
                                                    </RadialGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsObjective}" Value="True" />
                                                <Condition Binding="{Binding IsUnique}" Value="False" />
                                                <Condition Binding="{Binding IsCursed}" Value="False" />
                                                <Condition Binding="{Binding IsIdentified}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="RefractionLayer" Property="Fill">
                                                <Setter.Value>
                                                    <RadialGradientBrush Opacity="0.8" GradientOrigin="0.5,1.0">
                                                        <RadialGradientBrush.RelativeTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform CenterX="0.5" 
                                                                            CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                                <TranslateTransform X="0.02" Y="0.3"/>
                                                            </TransformGroup>
                                                        </RadialGradientBrush.RelativeTransform>
                                                        <GradientStop Offset="1" Color="#00000000"/>
                                                        <GradientStop Offset="0.4" Color="Cyan"/>
                                                    </RadialGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiDataTrigger>


                                        <!-- Objective Category -->
                                        <DataTrigger Binding="{Binding IsObjectiveCategory}" Value="True">
                                            <DataTrigger.Setters>
                                                <Setter TargetName="RefractionLayer" Property="Fill">
                                                    <Setter.Value>
                                                        <RadialGradientBrush Opacity="0.8" GradientOrigin="0.5,1.0">
                                                            <RadialGradientBrush.RelativeTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform CenterX="0.5" 
                                                                            CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                                </TransformGroup>
                                                            </RadialGradientBrush.RelativeTransform>
                                                            <GradientStop Offset="1" Color="#00000000"/>
                                                            <GradientStop Offset="0.4" Color="Cyan"/>
                                                        </RadialGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger.Setters>
                                        </DataTrigger>

                                        <!-- Unique -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsObjective}" Value="False" />
                                                <Condition Binding="{Binding IsUnique}" Value="True" />
                                                <Condition Binding="{Binding IsCursed}" Value="True" />
                                                <Condition Binding="{Binding IsIdentified}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="RefractionLayer" Property="Fill">
                                                <Setter.Value>
                                                    <RadialGradientBrush Opacity="0.8" GradientOrigin="0.5,1.0">
                                                        <RadialGradientBrush.RelativeTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform CenterX="0.5" 
                                                                            CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                                <TranslateTransform X="0.02" Y="0.3"/>
                                                            </TransformGroup>
                                                        </RadialGradientBrush.RelativeTransform>
                                                        <GradientStop Offset="1" Color="#00000000"/>
                                                        <GradientStop Offset="0.4" Color="Goldenrod"/>
                                                    </RadialGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsObjective}" Value="False" />
                                                <Condition Binding="{Binding IsUnique}" Value="True" />
                                                <Condition Binding="{Binding IsCursed}" Value="False" />
                                                <Condition Binding="{Binding IsIdentified}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="RefractionLayer" Property="Fill">
                                                <Setter.Value>
                                                    <RadialGradientBrush Opacity="0.8" GradientOrigin="0.5,1.0">
                                                        <RadialGradientBrush.RelativeTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform CenterX="0.5" 
                                                                            CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                                <TranslateTransform X="0.02" Y="0.3"/>
                                                            </TransformGroup>
                                                        </RadialGradientBrush.RelativeTransform>
                                                        <GradientStop Offset="1" Color="#00000000"/>
                                                        <GradientStop Offset="0.4" Color="Goldenrod"/>
                                                    </RadialGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiDataTrigger>

                                        <!-- Cursed -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsObjective}" Value="False" />
                                                <Condition Binding="{Binding IsUnique}" Value="False" />
                                                <Condition Binding="{Binding IsCursed}" Value="True" />
                                                <Condition Binding="{Binding IsIdentified}" Value="True" />
                                                <Condition Binding="{Binding IsCurseIdentified}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter TargetName="RefractionLayer" Property="Fill">
                                                    <Setter.Value>
                                                        <RadialGradientBrush Opacity="0.8" GradientOrigin="0.5,1.0">
                                                            <RadialGradientBrush.RelativeTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform CenterX="0.5" 
                                                                            CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                                </TransformGroup>
                                                            </RadialGradientBrush.RelativeTransform>
                                                            <GradientStop Offset="1" Color="#00000000"/>
                                                            <GradientStop Offset="0.4" Color="Red"/>
                                                        </RadialGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="CategoryTextBlockStyle" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="White" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SelectedItem.IsIdentifiedCategory, ElementName=CategoryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsObjectiveCategory, ElementName=CategoryLB}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="Cyan" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="CategoryEntryTextBlockStyle" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="White" />
                        <Style.Triggers>
                            <!-- Objective -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SelectedItem.IsIdentified, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsObjective, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsUnique, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsCursed, ElementName=CategoryEntryLB}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="Cyan" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SelectedItem.IsIdentified, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsObjective, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsUnique, ElementName=CategoryEntryLB}" Value="False" />
                                    <Condition Binding="{Binding SelectedItem.IsCursed, ElementName=CategoryEntryLB}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="Cyan" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SelectedItem.IsIdentified, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsObjective, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsUnique, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsCursed, ElementName=CategoryEntryLB}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="Cyan" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SelectedItem.IsIdentified, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsObjective, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsUnique, ElementName=CategoryEntryLB}" Value="False" />
                                    <Condition Binding="{Binding SelectedItem.IsCursed, ElementName=CategoryEntryLB}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="Cyan" />
                            </MultiDataTrigger>       
                            
                            <!-- Unique -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SelectedItem.IsObjective, ElementName=CategoryEntryLB}" Value="False" />
                                    <Condition Binding="{Binding SelectedItem.IsIdentified, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsUnique, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsCursed, ElementName=CategoryEntryLB}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="Cyan" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SelectedItem.IsObjective, ElementName=CategoryEntryLB}" Value="False" />
                                    <Condition Binding="{Binding SelectedItem.IsIdentified, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsUnique, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsCursed, ElementName=CategoryEntryLB}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="Cyan" />
                            </MultiDataTrigger>
                            
                            <!-- Cursed -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SelectedItem.IsIdentified, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsObjective, ElementName=CategoryEntryLB}" Value="False" />
                                    <Condition Binding="{Binding SelectedItem.IsUnique, ElementName=CategoryEntryLB}" Value="False" />
                                    <Condition Binding="{Binding SelectedItem.IsCursed, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsCursedIdentified, ElementName=CategoryEntryLB}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="Red" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="CategoryBorderStyle" TargetType="{x:Type Border}">
                        <Setter Property="BorderBrush" Value="White" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=SelectedItem.IsObjectiveCategory, ElementName=CategoryLB}" Value="True" />
                                    <Condition Binding="{Binding Path=SelectedItem.IsIdentifiedCategory, ElementName=CategoryLB}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="Cyan" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="CategoryEntryBorderStyle" TargetType="{x:Type Border}">
                        <Setter Property="BorderBrush" Value="White" />
                        <Style.Triggers>
                            <!-- Objective -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SelectedItem.IsObjective, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsUnique, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsCursed, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsIdentified, ElementName=CategoryEntryLB}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="Cyan" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SelectedItem.IsObjective, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsUnique, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsCursed, ElementName=CategoryEntryLB}" Value="False" />
                                    <Condition Binding="{Binding SelectedItem.IsIdentified, ElementName=CategoryEntryLB}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="Cyan" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SelectedItem.IsObjective, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsUnique, ElementName=CategoryEntryLB}" Value="False" />
                                    <Condition Binding="{Binding SelectedItem.IsCursed, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsIdentified, ElementName=CategoryEntryLB}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="Cyan" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SelectedItem.IsObjective, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsUnique, ElementName=CategoryEntryLB}" Value="False" />
                                    <Condition Binding="{Binding SelectedItem.IsCursed, ElementName=CategoryEntryLB}" Value="False" />
                                    <Condition Binding="{Binding SelectedItem.IsIdentified, ElementName=CategoryEntryLB}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="Cyan" />
                            </MultiDataTrigger>    
                            
                            <!-- Unique -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SelectedItem.IsObjective, ElementName=CategoryEntryLB}" Value="False" />
                                    <Condition Binding="{Binding SelectedItem.IsUnique, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsCursed, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsIdentified, ElementName=CategoryEntryLB}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="Goldenrod" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SelectedItem.IsObjective, ElementName=CategoryEntryLB}" Value="False" />
                                    <Condition Binding="{Binding SelectedItem.IsUnique, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsCursed, ElementName=CategoryEntryLB}" Value="False" />
                                    <Condition Binding="{Binding SelectedItem.IsIdentified, ElementName=CategoryEntryLB}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="Goldenrod" />
                            </MultiDataTrigger>

                            <!-- Cursed -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SelectedItem.IsObjective, ElementName=CategoryEntryLB}" Value="False" />
                                    <Condition Binding="{Binding SelectedItem.IsUnique, ElementName=CategoryEntryLB}" Value="False" />
                                    <Condition Binding="{Binding SelectedItem.IsCursed, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsCurseIdentified, ElementName=CategoryEntryLB}" Value="True" />
                                    <Condition Binding="{Binding SelectedItem.IsIdentified, ElementName=CategoryEntryLB}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="Red" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>                    
                </ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Common;component/Resource/Dictionaries/ShinyButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
    	<Grid.RowDefinitions>
    		<RowDefinition Height="150"/>
    		<RowDefinition/>
    	</Grid.RowDefinitions>
    	<Grid.ColumnDefinitions>
    		<ColumnDefinition Width="0.5*"/>
    		<ColumnDefinition Width="0.5*"/>
    	</Grid.ColumnDefinitions>
        <!-- Category -->
        <Border Grid.ColumnSpan="1" 
                DataContext="{Binding ElementName=CategoryLB, Path=SelectedItem}"
                Margin="8" 
                Style="{StaticResource CategoryBorderStyle}"
                BorderThickness="1" 
                CornerRadius="10" >
            <Grid x:Name="DataGrid1" Margin="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Style="{StaticResource CategoryTextBlockStyle}" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Category" VerticalAlignment="Center" Margin="8" FontSize="20"/>
                <TextBlock Style="{StaticResource CategoryTextBlockStyle}" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding CategoryDisplayName}" VerticalAlignment="Center" Margin="8" FontSize="20" Grid.Column="1"/>
                <TextBlock Style="{StaticResource CategoryTextBlockStyle}" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Description" VerticalAlignment="Center" Margin="8" FontSize="20" Grid.Row="1"/>
                <TextBlock Style="{StaticResource CategoryTextBlockStyle}" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding CategoryDescription}" VerticalAlignment="Center" Margin="8" FontSize="20" Grid.Column="1" Grid.Row="1"/>
                <TextBlock Style="{StaticResource CategoryTextBlockStyle}" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Percent Discovered" VerticalAlignment="Center" Margin="8" FontSize="20" Grid.Row="2" />
                <TextBlock Style="{StaticResource CategoryTextBlockStyle}" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding PercentComplete, StringFormat=P0}" VerticalAlignment="Center" Margin="8" FontSize="20" Grid.Column="1" Grid.Row="2" />
            </Grid>
        </Border>
        <!-- Category Entry -->
        <Border x:Name="EntryBorder" 
                DataContext="{Binding ElementName=CategoryEntryLB, Path=SelectedItem}"
                Style="{StaticResource CategoryEntryBorderStyle}"
                Margin="8" 
                BorderThickness="1" 
                CornerRadius="10" 
                Grid.Column="1">
            <Grid x:Name="DataGrid" Margin="8,8,8,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="140"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <!-- Category Entry Image -->
                <Image Source="{Binding ElementName=CategoryEntryLB, Path=SelectedItem.Source}" Margin="8" Width="20" Height="30" HorizontalAlignment="Left" />

                <!-- Category Entry Name -->
                <TextBlock Style="{StaticResource CategoryEntryTextBlockStyle}" Grid.Column="1" Text="{Binding ElementName=CategoryEntryLB, Path=SelectedItem.DisplayName}" Margin="8" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Center" />

                <!-- Category Entry Attributes (Unique)(Objective)(Cursed)-->
                <StackPanel Grid.Column="1" Margin="8" Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBlock Text="(Cursed)" FontSize="18" Foreground="Red" VerticalAlignment="Center" HorizontalAlignment="Left" FontStyle="Italic">
                        <TextBlock.Visibility>
                            <MultiBinding Converter="{StaticResource BoolANDVisibilityMultiConverter}">
                                <Binding Path="IsIdentified" />
                                <Binding Path="IsCurseIdentified" />
                                <Binding Path="IsCursed" />
                            </MultiBinding>
                        </TextBlock.Visibility>
                    </TextBlock>                    
                    <TextBlock Text="(Unique)" Margin="8,0,0,0" FontSize="18" Foreground="Goldenrod" VerticalAlignment="Center" HorizontalAlignment="Left" FontStyle="Italic">
                        <TextBlock.Visibility>
                            <MultiBinding Converter="{StaticResource DualBoolVisibilityCollapsedConverter}">
                                <Binding Path="IsIdentified" />
                                <Binding Path="IsUnique" />
                            </MultiBinding>
                        </TextBlock.Visibility>
                    </TextBlock>
                    <TextBlock Text="(Objective)" Margin="8,0,0,0" FontSize="18" Foreground="Cyan" VerticalAlignment="Center" HorizontalAlignment="Left" FontStyle="Italic">
                        <TextBlock.Visibility>
                            <MultiBinding Converter="{StaticResource DualBoolVisibilityCollapsedConverter}">
                                <Binding Path="IsIdentified" />
                                <Binding Path="IsObjective" />
                            </MultiBinding>
                        </TextBlock.Visibility>
                    </TextBlock>
                </StackPanel>

                <!-- Category Entry Description -->
                <TextBlock Text="Description" Grid.Row="1" Style="{StaticResource CategoryEntryTextBlockStyle}" TextWrapping="Wrap" Margin="8" VerticalAlignment="Top" FontSize="20" />
                <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                              VerticalScrollBarVisibility="Auto"
                              Grid.Row="1" 
                              Grid.Column="1" >
                    <TextBlock Text="{Binding LongDescription}" 
                               Style="{StaticResource CategoryEntryTextBlockStyle}"
                               TextWrapping="Wrap" 
                               Margin="8" 
                               VerticalAlignment="Top" 
                               HorizontalAlignment="Left" 
                               FontSize="16"/>
                </ScrollViewer>
            </Grid>
        </Border>
        <Border Margin="8" Grid.Row="1" Style="{StaticResource CategoryBorderStyle}" BorderThickness="1" CornerRadius="10">
            <Grid>
                <ListBox x:Name="CategoryLB"
                         Background="Black"
                         BorderBrush="Transparent"
                         VirtualizingPanel.IsVirtualizing="False"
                         ItemContainerStyle="{StaticResource EllipseListBoxItemStyle}"
                         ItemsSource="{Binding Categories, Converter={StaticResource RogueMetaDataCategoryFilter}}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <control:EllipsePanel SelectedItem="{Binding ElementName=CategoryLB, Path=SelectedItem}" IsItemsHost="True" Background="Black" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
                <TextBlock Text="{Binding Path=SelectedItem.CategoryDisplayName, ElementName=CategoryLB}"
                           Style="{StaticResource CategoryTextBlockStyle}"
                           FontSize="22"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center" />
            </Grid>
        </Border>
        <Border Grid.Column="1" Style="{StaticResource CategoryEntryBorderStyle}" Margin="8" Grid.Row="1" BorderThickness="1" CornerRadius="10" >
        	<Grid>
                <ListBox x:Name="CategoryEntryLB" 
                         Background="Black"
                         BorderBrush="Transparent"
                         VirtualizingPanel.IsVirtualizing="False"
                         ItemContainerStyle="{StaticResource EllipseListBoxItemStyle}"
                         ItemsSource="{Binding ElementName=CategoryLB, Path=SelectedItem.Items}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <control:EllipsePanel SelectedItem="{Binding ElementName=CategoryEntryLB, Path=SelectedItem}"  IsItemsHost="True" Background="Black" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
                <TextBlock Text="{Binding Path=SelectedItem.DisplayName, ElementName=CategoryEntryLB}"
                           Style="{StaticResource CategoryEntryTextBlockStyle}"
                           FontSize="22"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center" />                
        	</Grid>
        </Border>
    </Grid>
</UserControl>