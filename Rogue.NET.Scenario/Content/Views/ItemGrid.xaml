<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Rogue.NET.Scenario.Content.Views"
             xmlns:viewModel="clr-namespace:Rogue.NET.Scenario.Content.ViewModel.ItemGrid"
             xmlns:scenarioConverter="clr-namespace:Rogue.NET.Scenario.Converter"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:extension="clr-namespace:Rogue.NET.Common.Extension;assembly=Rogue.NET.Common"
             xmlns:interactivity="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:itemGridModes="clr-namespace:Rogue.NET.Scenario.Content.ViewModel.ItemGrid"
             xmlns:itemTemplateSelector="clr-namespace:Rogue.NET.Scenario.Content.Views.ItemTemplateSelector"
             x:Class="Rogue.NET.Scenario.Content.Views.ItemGrid" 
             HorizontalContentAlignment="Stretch"
             HorizontalAlignment="Stretch"
             Background="Transparent" 
             BorderBrush="Black">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Rogue.NET.Core;component/Resource/Converter.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Common;component/Resource/Dictionaries/DarkListBox.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Scenario;component/Resources/Dictionaries/ItemGrid.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Common;component/Resource/Dictionaries/RadioButton.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Common;component/Resource/Dictionaries/ImageButton.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Rogue.NET.Common;component/Resource/Dictionaries/ShinyTextButton.xaml"/>
                <ResourceDictionary>
                    <scenarioConverter:ItemGridButtonVisibilityConverter x:Key="ItemGridButtonVisibilityConverter" />
                    <scenarioConverter:ItemGridRowButtonVisibilitiyConverter x:Key="ItemGridRowButtonVisibilitiyConverter" />
                    <scenarioConverter:ItemGridRowImageSourceMultiConverter x:Key="ItemGridRowImageSourceMultiConverter" />
                    <scenarioConverter:ItemGridIntendedActionTextConverter x:Key="ItemGridIntendedActionTextConverter" />
                    <itemTemplateSelector:RogueItemGridRowDetailsTemplateSelector x:Key="RogueItemGridRowDetailsTemplateSelector" />

                    <!-- Collection View Source Binding to DataContext -->
                    <CollectionViewSource x:Key='SortedItemsSource' Source="{Binding}">
                        <CollectionViewSource.SortDescriptions>
                            <componentModel:SortDescription PropertyName="Type" />
                            <componentModel:SortDescription PropertyName="RogueName" />
                        </CollectionViewSource.SortDescriptions>
                    </CollectionViewSource>

                    <!-- Resources that reference code behind -->
                    <DataTemplate x:Key="ButtonCellTemplate">
                        <Button x:Name="SelectCheckBox" 
                            Tag="{Binding}" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Right" 
                            Click="SelectCheckBox_Click"
                            Style="{DynamicResource Rogue2ItemButton}" 
                            Margin="0" 
                            Cursor="Hand">
                            <interactivity:Interaction.Triggers>
                                <interactivity:EventTrigger EventName="Click">
                                    <extension:CustomDialogResultTrigger
                                        DialogResult="True"
                                        IsEnabled="{Binding IsDialogMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}">
                                    </extension:CustomDialogResultTrigger>
                                </interactivity:EventTrigger>
                            </interactivity:Interaction.Triggers>

                                <Button.Visibility>
                                <MultiBinding Converter="{StaticResource ItemGridRowButtonVisibilitiyConverter}">
                                    <Binding Path="IntendedAction" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}" />
                                    <Binding Path="ConsumeEnable" />
                                    <Binding Path="EquipEnable" />
                                    <Binding Path="IdentifyEnable" />
                                    <Binding Path="UncurseEnable" />
                                    <Binding Path="EnchantArmorEnable" />
                                    <Binding Path="EnchantWeaponEnable" />
                                    <Binding Path="ImbueArmorEnable" />
                                    <Binding Path="ImbueWeaponEnable" />
                                    <Binding Path="ThrowEnable" />
                                    <Binding Path="DropEnable" />
                                </MultiBinding>
                            </Button.Visibility>
                        </Button>
                    </DataTemplate>

                    <!-- Resources that reference local classes -->
                    <Style x:Key="RogueItemGridRowStyle" TargetType="{x:Type DataGridRow}">
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{Binding IsSelected, Converter={StaticResource ItemGridSelectionColorConverter}}"/>
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="DetailsVisibility" Value="Collapsed" />
                        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                        <Setter Property="ValidationErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridRow}">
                                    <Border x:Name="DGR_Border" 
                                            HorizontalAlignment="Stretch"
                                            Background="Transparent"
                                            BorderThickness="{TemplateBinding BorderThickness}" 
                                            SnapsToDevicePixels="True">
                                        <SelectiveScrollingGrid HorizontalAlignment="Stretch">
                                            <SelectiveScrollingGrid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </SelectiveScrollingGrid.ColumnDefinitions>
                                            <SelectiveScrollingGrid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </SelectiveScrollingGrid.RowDefinitions>
                                            <DataGridCellsPresenter x:Name="dataGridCellsPresenter" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                            <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        </SelectiveScrollingGrid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="DGR_Border" Value="#4C0800FF"/>
                                            <Setter Property="Background" TargetName="dataGridCellsPresenter" Value="#4D1F00FF"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                    <Condition Binding="{Binding ShowDetails, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="DetailsVisibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Trigger.Setters>
                                    <Setter Property="DetailsVisibility" Value="Collapsed" />
                                </Trigger.Setters>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <!-- Equipment Row Details Template -->
                    <DataTemplate x:Key="RogueItemGridRowEquipmentDetailsTemplate">
                        <Border Background="Black" BorderThickness="0.5">
                            <Border.BorderBrush>
                                <MultiBinding Converter="{StaticResource ItemGridTooltipForegroundConverter}">
                                    <Binding Path="IsEquiped" />
                                    <Binding Path="IsCursed" />
                                    <Binding Path="IsObjective" />
                                    <Binding Path="IsUnique" />
                                </MultiBinding>
                            </Border.BorderBrush>
                            <Border.Resources>
                                <Style x:Key="EquipmentTextBlockBrush" TargetType="TextBlock">
                                    <Setter Property="Foreground">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource ItemGridTooltipForegroundConverter}">
                                                <Binding Path="IsEquiped" />
                                                <Binding Path="IsCursed" />
                                                <Binding Path="IsObjective" />
                                                <Binding Path="IsUnique" />
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="FontStyle">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource ItemGridFontStyleConverter}">
                                                <Binding Path="IsEquiped" />
                                                <Binding Path="IsCursed" />
                                                <Binding Path="IsObjective" />
                                                <Binding Path="IsUnique" />
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="FontSize" Value="14" />
                                </Style>
                            </Border.Resources>
                            <StackPanel>
                                <Grid Margin="4,4,4,0"
                                      Visibility="{Binding HasReligionRequirement, Converter={StaticResource BoolVisibilityCollapseConverter}}">
                                    <TextBlock Text="Required Religion" HorizontalAlignment="Left" VerticalAlignment="Center"
                                               Style="{StaticResource EquipmentTextBlockBrush}" />
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Image Height="20" Width="20" VerticalAlignment="Center">
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource ItemGridRowImageSourceMultiConverter}">
                                                    <Binding Path="Religion.CharacterColor" />
                                                    <Binding Path="Religion.CharacterSymbol" />
                                                    <Binding Path="Religion.Icon" />
                                                    <Binding Path="Religion.DisplayIcon" />
                                                    <Binding Path="Religion.SmileyMood" />
                                                    <Binding Path="Religion.SmileyAuraColor" />
                                                    <Binding Path="Religion.SmileyBodyColor" />
                                                    <Binding Path="Religion.SmileyLineColor" />
                                                    <Binding Path="Religion.SymbolType" />
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                        <TextBlock Text="{Binding Religion.DisplayName}" Style="{StaticResource EquipmentTextBlockBrush}" VerticalAlignment="Center" />
                                    </StackPanel>

                                </Grid>
                                <Grid Margin="4">
                                    <TextBlock HorizontalAlignment="Left"
                                               Style="{StaticResource EquipmentTextBlockBrush}">
                                        <Run Text="Required Level " />
                                        <Run Text="{Binding RequiredLevel}" />
                                    </TextBlock>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <TextBlock Visibility="{Binding IsCursed, Converter={StaticResource BoolVisibilityCollapseConverter}}"
                                                   Style="{StaticResource EquipmentTextBlockBrush}">
                                            <Run Text="Cursed" />
                                        </TextBlock>
                                        <TextBlock Margin="2,0,0,0" Visibility="{Binding IsObjective, Converter={StaticResource BoolVisibilityCollapseConverter}}"
                                                   Style="{StaticResource EquipmentTextBlockBrush}">
                                            <Run Text="Objective" />
                                        </TextBlock>
                                        <TextBlock Margin="2,0,0,0" Visibility="{Binding IsUnique, Converter={StaticResource BoolVisibilityCollapseConverter}}"
                                                   Style="{StaticResource EquipmentTextBlockBrush}">
                                            <Run Text="Unique" />
                                        </TextBlock>
                                    </StackPanel>
                                </Grid>
                                <Grid Margin="4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Column="0">
                                        <TextBlock Style="{StaticResource EquipmentTextBlockBrush}">
                                            <Run Text="Class: " />
                                            <Run Text="{Binding Class}" />
                                        </TextBlock>
                                        <TextBlock Style="{StaticResource EquipmentTextBlockBrush}">
                                            <Run Text="Quality: " />
                                            <Run Text="{Binding Quality}" />
                                        </TextBlock>
                                        <TextBlock Style="{StaticResource EquipmentTextBlockBrush}"
                                                   Visibility="{Binding IsWeapon, Converter={StaticResource BoolVisibilityCollapseConverter}}">
                                            <Run Text="Attack Value: " />
                                            <Run Text="{Binding AttackValue}" />
                                        </TextBlock>
                                        <TextBlock Style="{StaticResource EquipmentTextBlockBrush}"
                                                   Visibility="{Binding IsArmor, Converter={StaticResource BoolVisibilityCollapseConverter}}">
                                            <Run Text="Defense Value: " />
                                            <Run Text="{Binding DefenseValue}" />
                                        </TextBlock>
                                        <TextBlock Style="{StaticResource EquipmentTextBlockBrush}">
                                            <Run Text="Weight: " />
                                            <Run Text="{Binding Weight}" />
                                        </TextBlock>
                                    </StackPanel>
                                    <ListBox    Grid.Column="1"
                                                ItemsSource="{Binding AttackAttributes}" 
                                                HorizontalContentAlignment="Stretch" 
                                                HorizontalAlignment="Stretch"
                                                Style="{StaticResource DarkListBoxStyle}" 
                                                ItemContainerStyle="{StaticResource DarkListBoxContainerStyle}" 
                                                Background="Black" 
                                                BorderThickness="0">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <local:DungeonEncyclopediaAttackAttributeCtrl />
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Grid>
                            </StackPanel>
                        </Border>
                    </DataTemplate>

                    <!-- Consumable Row Details Template -->
                    <DataTemplate x:Key="RogueItemGridRowConsumableDetailsTemplate">
                        <Border Background="Black" BorderThickness="0.5">
                            <Border.BorderBrush>
                                <MultiBinding Converter="{StaticResource ItemGridTooltipForegroundConverter}">
                                    <Binding Path="IsEquiped" />
                                    <Binding Path="IsCursed" />
                                    <Binding Path="IsObjective" />
                                    <Binding Path="IsUnique" />
                                </MultiBinding>
                            </Border.BorderBrush>
                            <Border.Resources>
                                <Style x:Key="ConsumableTextBlockBrush" TargetType="TextBlock">
                                    <Setter Property="Foreground">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource ItemGridTooltipForegroundConverter}">
                                                <Binding Path="IsEquiped" />
                                                <Binding Path="IsCursed" />
                                                <Binding Path="IsObjective" />
                                                <Binding Path="IsUnique" />
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="FontStyle">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource ItemGridFontStyleConverter}">
                                                <Binding Path="IsEquiped" />
                                                <Binding Path="IsCursed" />
                                                <Binding Path="IsObjective" />
                                                <Binding Path="IsUnique" />
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="FontSize" Value="14" />
                                </Style>
                            </Border.Resources>
                            <StackPanel>
                                <Grid Margin="4,4,4,0"
                                      Visibility="{Binding HasReligionRequirement, Converter={StaticResource BoolVisibilityCollapseConverter}}">
                                    <TextBlock Text="Required Religion" HorizontalAlignment="Left"
                                               Style="{StaticResource ConsumableTextBlockBrush}" />
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Image Height="20" Width="20" VerticalAlignment="Center">
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource ItemGridRowImageSourceMultiConverter}">
                                                    <Binding Path="Religion.CharacterColor" />
                                                    <Binding Path="Religion.CharacterSymbol" />
                                                    <Binding Path="Religion.Icon" />
                                                    <Binding Path="Religion.DisplayIcon" />
                                                    <Binding Path="Religion.SmileyMood" />
                                                    <Binding Path="Religion.SmileyAuraColor" />
                                                    <Binding Path="Religion.SmileyBodyColor" />
                                                    <Binding Path="Religion.SmileyLineColor" />
                                                    <Binding Path="Religion.SymbolType" />
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                        <TextBlock Text="{Binding Religion.DisplayName}" Style="{StaticResource ConsumableTextBlockBrush}" VerticalAlignment="Center" />
                                    </StackPanel>

                                </Grid>
                                <Grid Margin="4">
                                    <TextBlock HorizontalAlignment="Left" Style="{StaticResource ConsumableTextBlockBrush}">
                                        <Run Text="Required Level " />
                                        <Run Text="{Binding RequiredLevel}" />
                                    </TextBlock>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <TextBlock Visibility="{Binding IsCursed, Converter={StaticResource BoolVisibilityCollapseConverter}}"
                                                   Style="{StaticResource ConsumableTextBlockBrush}">
                                            <Run Text="Cursed" />
                                        </TextBlock>
                                        <TextBlock Visibility="{Binding IsObjective, Converter={StaticResource BoolVisibilityCollapseConverter}}"
                                                   Style="{StaticResource ConsumableTextBlockBrush}">
                                            <Run Text="Objective" />
                                        </TextBlock>
                                        <TextBlock Visibility="{Binding IsUnique, Converter={StaticResource BoolVisibilityCollapseConverter}}"
                                                   Style="{StaticResource ConsumableTextBlockBrush}">
                                            <Run Text="Unique" />
                                        </TextBlock>
                                    </StackPanel>
                                </Grid>
                                <Grid Margin="4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Column="0">
                                        <TextBlock Style="{StaticResource ConsumableTextBlockBrush}">
                                            <Run Text="Quantity: " />
                                            <Run Text="{Binding Quantity}" />
                                        </TextBlock>
                                        <TextBlock Style="{StaticResource ConsumableTextBlockBrush}">
                                            <Run Text="Uses: " />
                                            <Run Text="{Binding Uses}" />
                                        </TextBlock>
                                        <TextBlock Style="{StaticResource ConsumableTextBlockBrush}">
                                            <Run Text="Weight: " />
                                            <Run Text="{Binding Weight}" />
                                        </TextBlock>
                                    </StackPanel>
                                    <StackPanel Grid.Column="1">
                                        <TextBlock Style="{StaticResource ConsumableTextBlockBrush}">
                                            <Run Text="Type: " />
                                            <Run Text="{Binding Type}" />
                                        </TextBlock>
                                        <TextBlock Visibility="{Binding ThrowEnable, Converter={StaticResource BoolVisibilityCollapseConverter}}"
                                                   Style="{StaticResource ConsumableTextBlockBrush}">
                                            <Run Text="Throwable: " />
                                            <Run Text="Yes" />
                                        </TextBlock>
                                        <TextBlock Visibility="{Binding ThrowEnable, Converter={StaticResource BoolInverseVisibilityCollapseConverter}}"
                                                   Style="{StaticResource ConsumableTextBlockBrush}">
                                            <Run Text="Throwable: " />
                                            <Run Text="No" />
                                        </TextBlock>
                                    </StackPanel>
                                </Grid>
                            </StackPanel>
                        </Border>
                    </DataTemplate>

                
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot">
    	<Grid.RowDefinitions>
    		<RowDefinition Height="Auto" />
            <RowDefinition Height="*"/>
    	</Grid.RowDefinitions>
        <Grid Margin="4">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <ToggleButton x:Name="ShowDetailsButton" 
                          FontSize="12"
                          ToolTip="Show Details"
                          VerticalAlignment="Center"
                          Margin="4, 0, 8, 0"
                          Foreground="White"
                          Background="Black"
                          BorderBrush="White"
                          Cursor="Hand"
                          Width="14"
                          Height="14"
                          IsChecked="{Binding ShowDetails, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}"
                          Content="?"
                          Style="{StaticResource ShinyTextToggleButtonStyle}" />
                <TextBlock x:Name="ModeTB"  
                   Grid.Row="0" 
                   Text="{Binding IntendedAction, Converter={StaticResource ItemGridIntendedActionTextConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}"
                   TextWrapping="Wrap" 
                   VerticalAlignment="Center" 
                   FontSize="20" 
                   HorizontalAlignment="Left">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="White" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IntendedAction, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" 
                                         Value="{x:Static viewModel:ItemGridActions.Drop}">
                                    <Setter Property="Foreground" Value="Red" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IntendedAction, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" 
                                         Value="{x:Static viewModel:ItemGridActions.Throw}">
                                    <Setter Property="Foreground" Value="Goldenrod" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IntendedAction, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" 
                                         Value="{x:Static viewModel:ItemGridActions.ImbueWeapon}">
                                    <Setter Property="Foreground" Value="Red" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IntendedAction, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" 
                                         Value="{x:Static viewModel:ItemGridActions.ImbueArmor}">
                                    <Setter Property="Foreground" Value="Red" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IntendedAction, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" 
                                         Value="{x:Static viewModel:ItemGridActions.EnchantWeapon}">
                                    <Setter Property="Foreground" Value="Yellow" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IntendedAction, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" 
                                         Value="{x:Static viewModel:ItemGridActions.EnchantWeapon}">
                                    <Setter Property="Foreground" Value="Yellow" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IntendedAction, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" 
                                         Value="{x:Static viewModel:ItemGridActions.Uncurse}">
                                    <Setter Property="Foreground" Value="White" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IntendedAction, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" 
                                         Value="{x:Static viewModel:ItemGridActions.Identify}">
                                    <Setter Property="Foreground" Value="White" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IntendedAction, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" 
                                         Value="{x:Static viewModel:ItemGridActions.Equip}">
                                    <Setter Property="Foreground" Value="White" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IntendedAction, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" 
                                         Value="{x:Static viewModel:ItemGridActions.Consume}">
                                    <Setter Property="Foreground" Value="Fuchsia" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
                <RadioButton x:Name="Consume" IsChecked="{Binding IntendedAction, Mode=TwoWay, Converter={StaticResource RadioButtonEnumConverter}, ConverterParameter={x:Static viewModel:ItemGridActions.Consume}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" Tag="pack://application:,,,/Rogue.NET.Common;component/Resource/Images/Consume.png" BorderBrush="Fuchsia" VerticalAlignment="Center" Height="24" Width="24" Background="Black" Foreground="White" Style="{DynamicResource ImageButtonStyle}" HorizontalAlignment="Right" ToolTip="Consume" Cursor="Hand"/>
                <RadioButton x:Name="Equip" IsChecked="{Binding IntendedAction, Mode=TwoWay, Converter={StaticResource RadioButtonEnumConverter}, ConverterParameter={x:Static viewModel:ItemGridActions.Equip}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" Tag="pack://application:,,,/Rogue.NET.Common;component/Resource/Images/Equip.png" BorderBrush="Silver" Margin="4,0,0,0" VerticalAlignment="Center" Height="24" Width="24" Background="Black" Foreground="White" Style="{DynamicResource ImageButtonStyle}" HorizontalAlignment="Right" ToolTip="Equip" Cursor="Hand" />
                <RadioButton x:Name="Identify" IsChecked="{Binding IntendedAction, Mode=TwoWay, Converter={StaticResource RadioButtonEnumConverter}, ConverterParameter={x:Static viewModel:ItemGridActions.Identify}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" Tag="pack://application:,,,/Rogue.NET.Common;component/Resource/Images/Identify.png" BorderBrush="Yellow" Margin="4,0,0,0" VerticalAlignment="Center" Height="24" Width="24" Background="Black" Foreground="White" Style="{DynamicResource ImageButtonStyle}" HorizontalAlignment="Right" ToolTip="Identify" Cursor="Hand" />
                <RadioButton x:Name="Uncurse" IsChecked="{Binding IntendedAction, Mode=TwoWay, Converter={StaticResource RadioButtonEnumConverter}, ConverterParameter={x:Static viewModel:ItemGridActions.Uncurse}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" Tag="pack://application:,,,/Rogue.NET.Common;component/Resource/Images/Uncurse.png" BorderBrush="White" Margin="4,0,0,0" VerticalAlignment="Center" Height="24" Width="24" Background="Black" Foreground="White" Style="{DynamicResource ImageButtonStyle}"  HorizontalAlignment="Right" ToolTip="Uncurse" Cursor="Hand" />
                <RadioButton x:Name="EnchantArmor" IsChecked="{Binding IntendedAction, Mode=TwoWay, Converter={StaticResource RadioButtonEnumConverter}, ConverterParameter={x:Static viewModel:ItemGridActions.EnchantArmor}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" Tag="pack://application:,,,/Rogue.NET.Common;component/Resource/Images/EnchantArmor.png" BorderBrush="White" Margin="4,0,0,0" VerticalAlignment="Center" Height="24" Width="24" Background="Black" Foreground="White" Style="{DynamicResource ImageButtonStyle}"  HorizontalAlignment="Right" ToolTip="Enchant Armor" Cursor="Hand" />
                <RadioButton x:Name="EnchantWeapon" IsChecked="{Binding IntendedAction, Mode=TwoWay, Converter={StaticResource RadioButtonEnumConverter}, ConverterParameter={x:Static viewModel:ItemGridActions.EnchantWeapon}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" Tag="pack://application:,,,/Rogue.NET.Common;component/Resource/Images/EnchantWeapon.png" BorderBrush="White" Margin="4,0,0,0" VerticalAlignment="Center" Height="24" Width="24" Background="Black" Foreground="White" Style="{DynamicResource ImageButtonStyle}"  HorizontalAlignment="Right" ToolTip="Enchant Weapon" Cursor="Hand" />
                <RadioButton x:Name="ImbueArmor" IsChecked="{Binding IntendedAction, Mode=TwoWay, Converter={StaticResource RadioButtonEnumConverter}, ConverterParameter={x:Static viewModel:ItemGridActions.ImbueArmor}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" Tag="pack://application:,,,/Rogue.NET.Common;component/Resource/Images/ImbueArmor.png" BorderBrush="Red" Margin="4,0,0,0" VerticalAlignment="Center" Height="24" Width="24" Background="Black" Foreground="White" Style="{DynamicResource ImageButtonStyle}"  HorizontalAlignment="Right" ToolTip="Imbue Armor" Cursor="Hand" />
                <RadioButton x:Name="ImbueWeapon" IsChecked="{Binding IntendedAction, Mode=TwoWay, Converter={StaticResource RadioButtonEnumConverter}, ConverterParameter={x:Static viewModel:ItemGridActions.ImbueWeapon}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" Tag="pack://application:,,,/Rogue.NET.Common;component/Resource/Images/ImbueWeapon.png" BorderBrush="Red" Margin="4,0,0,0" VerticalAlignment="Center" Height="24" Width="24" Background="Black" Foreground="White" Style="{DynamicResource ImageButtonStyle}"  HorizontalAlignment="Right" ToolTip="Imbue Weapon" Cursor="Hand" />
                <RadioButton x:Name="Throw" IsChecked="{Binding IntendedAction, Mode=TwoWay, Converter={StaticResource RadioButtonEnumConverter}, ConverterParameter={x:Static viewModel:ItemGridActions.Throw}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" Tag="pack://application:,,,/Rogue.NET.Common;component/Resource/Images/Throw.png" BorderBrush="Orange" Margin="4,0,0,0" VerticalAlignment="Center" Height="24" Width="24" Background="Black" Foreground="White" Style="{DynamicResource ImageButtonStyle}" HorizontalAlignment="Right" ToolTip="Throw" Cursor="Hand" />
                <RadioButton x:Name="Drop" IsChecked="{Binding IntendedAction, Mode=TwoWay, Converter={StaticResource RadioButtonEnumConverter}, ConverterParameter={x:Static viewModel:ItemGridActions.Drop}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ItemGrid}}}" Tag="pack://application:,,,/Rogue.NET.Common;component/Resource/Images/Drop.png" BorderBrush="Red" Style="{StaticResource ImageButtonStyle}" Height="24" Width="24" Margin="4,0,0,0" VerticalAlignment="Center" Background="Black" Foreground="White" HorizontalAlignment="Right" ToolTip="Drop" Cursor="Hand" />
            </StackPanel>
        </Grid>
        <DataGrid x:Name="TheGrid"
                  ItemsSource="{Binding Source={StaticResource SortedItemsSource}}"
                  Grid.Row="1"
                  Background="Transparent" 
                  IsReadOnly="True"
                  Margin="0"
                  BorderThickness="0,0,0,1"
                  BorderBrush="Black"
                  AutoGenerateColumns="False"
                  EnableRowVirtualization="True"
                  VirtualizingPanel.VirtualizationMode="Recycling"
                  VirtualizingPanel.CacheLengthUnit="Item"
                  VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.ScrollUnit="Item"
                  VirtualizingPanel.IsContainerVirtualizable="True"
                  HorizontalContentAlignment="Stretch" 
                  VerticalContentAlignment="Stretch"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  RowHeaderWidth="0" 
                  CanUserSortColumns="False" 
                  CanUserResizeColumns="False" 
                  CanUserReorderColumns="False" 
                  CanUserResizeRows="False" 
                  RowBackground="Black"
                  HorizontalScrollBarVisibility="Disabled" 
                  VerticalScrollBarVisibility="Auto"
                  GridLinesVisibility="Horizontal"
                  SelectionMode="Single"
                  SelectionUnit="FullRow"                   
                  ColumnHeaderStyle="{DynamicResource Rogue2DataGridColumnHeaderStyle}" 
                  RowStyle="{DynamicResource RogueItemGridRowStyle}" 
                  Style="{DynamicResource Rogue2ItemDataGridStyle}" 
                  RowDetailsTemplateSelector="{StaticResource RogueItemGridRowDetailsTemplateSelector}"
                  CellStyle="{StaticResource DataGridCellStyle}"
                  ColumnWidth="SizeToCells">
            <DataGrid.Columns>
                <DataGridTemplateColumn x:Name="ButtonColumn" Width="Auto" HeaderStyle="{StaticResource HeaderStyle}" CellTemplate="{StaticResource ButtonCellTemplate}" />
                <DataGridTemplateColumn CellTemplate="{StaticResource ImageCellTemplate}"  HeaderStyle="{StaticResource HeaderStyle}" />
                <DataGridTextColumn x:Name="QuantityColumn" Header="#" Width="Auto" HeaderStyle="{StaticResource HeaderStyle}" Binding="{Binding Quantity}" />
                <DataGridTextColumn x:Name="ClassColumn" Width="Auto" Header="Class" HeaderStyle="{StaticResource HeaderStyle}" Binding="{Binding Class}" />
                <DataGridTemplateColumn x:Name="AttackAttributeColumn" Header="Attack Attributes" HeaderStyle="{StaticResource HeaderStyle}" CellTemplate="{StaticResource AttackAttributesCellTemplate}" />
                <DataGridTextColumn Header="" Width="0" SortDirection="Ascending" Visibility="Collapsed"  Binding="{Binding Type}" />
                <DataGridTextColumn x:Name="NameColumn" Width="*" Header="" SortDirection="Ascending" Binding="{Binding DisplayName}">
                    <DataGridTextColumn.CellStyle>
                        <Style BasedOn="{StaticResource DataGridCellStyle}" TargetType="DataGridCell">
                            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="DataGridCell">
                                        <TextBlock Text="{Binding DisplayName}" Margin="0,0,4,0" HorizontalAlignment="Right" VerticalAlignment="Center"  />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
            <DataGrid.HorizontalGridLinesBrush>
                <SolidColorBrush Color="#2Faa99aa" />
            </DataGrid.HorizontalGridLinesBrush>
        </DataGrid>
    </Grid>
</UserControl>    